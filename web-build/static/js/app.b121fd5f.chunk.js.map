{"version":3,"sources":["web-build/register-service-worker.js","screens/ListofCampaignScreen.js","CustomSidebarMenu.js","App.js","webpack:////Users/thonglk/Code/zaly/zaly-koc/index.js?78c3"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","styles","StyleSheet","create","ButtonSolidB3","borderRadius","fontFamily","fontWeight","textAlign","TouchableTg","flexDirection","alignItems","Viewog","marginBottom","justifyContent","marginTop","ViewVq","maxWidth","Imagecx","height","width","View_2u","minWidth","minHeight","maxHeight","overflow","borderBottomWidth","borderLeftWidth","borderTopWidth","borderRightWidth","marginLeft","ViewOI","TextYd","marginRight","fontSize","Textiu","textDecorationLine","Viewd1","Text_77","ViewIx","Textap","View_6p","paddingLeft","paddingRight","paddingTop","paddingBottom","TouchableBb","alignSelf","ViewWA","flexGrow","Viewh5","TextInputTC","opacity","screen","withTheme","props","theme","isFocused","useIsFocused","React","useState","loading","setLoading","style","hasSafeArea","scrollable","View","Text","typography","headline4","color","colors","strong","onPress","a","async","WebBrowser","backgroundColor","primary","title","key","String","cacheResponse","url","method","headers","Accept","Authorization","data","doFetch","ActivityIndicator","FlatList","renderItem","item","borderColor","divider","background","roundness","headline5","fields","name","Image","resizeMode","source","uri","medium","max_commission_rate","max_commission_value","light","subtitle2","Clipboard","err","button","numColumns","onChangeText","placeholder","value","sideMenuProfileIcon","iconStyle","marginHorizontal","customItem","padding","CustomSidebarMenu","SafeAreaView","flex","DrawerContentScrollView","DrawerItemList","Stack","createStackNavigator","Drawer","createDrawerNavigator","NavigationDrawerStructure","TouchableOpacity","navigationProps","toggleDrawer","ListofCampaignScreenStack","navigation","Navigator","initialRouteName","Screen","component","ListofCampaignScreen","options","headerLeft","headerStyle","headerTintColor","headerTitleStyle","App","NavigationContainer","drawerContentOptions","activeTintColor","itemStyle","marginVertical","drawerContent","drawerLabel","registerRootComponent"],"mappings":"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","file":"static/js/app.b121fd5f.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React from 'react';\nimport * as CustomCode from '../components.js';\nimport {\n  ButtonSolid,\n  ScreenContainer,\n  TextInput,\n  Touchable,\n  withTheme,\n} from '@draftbit/ui';\nimport { useIsFocused } from '@react-navigation/native';\nimport * as Clipboard from 'expo-clipboard';\nimport * as WebBrowser from 'expo-web-browser';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\nimport { Fetch } from 'react-request';\n\nconst ListofCampaignScreen = props => {\n  const { theme } = props;\n\n  const CopyLink = url => {\n    Clipboard.setString(url);\n  };\n\n  const postData = async () => {\n    const url = `https://api.accesstrade.vn/v1/campaigns`;\n    const headers = {\n      Accept: 'application/json',\n      Authorization: 'Token tE9hS7UFRu7A2ztqPZTiP-ASaBxDOFRM',\n      'Content-Type': 'application/json',\n    };\n    const body = JSON.stringify({\n      lastName,\n      firstName,\n      phone: phoneNumber,\n      email,\n      clientCode,\n      coachId: props.route.params['userId'],\n      userId: props.route.params['userId'],\n    });\n    if (loader) return console.log(loader);\n    setLoader('Loading...');\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers,\n        body,\n      });\n      if (result.error) throw new Error(result.error);\n      setLoader(undefined);\n      return (result = await response.json());\n    } catch (error) {\n      setLoader(undefined);\n\n      alert(error);\n    }\n  };\n\n  const getData = async () => {\n    const url = `https://api.accesstrade.vn/v1/campaigns`;\n    const headers = {\n      Accept: 'application/json',\n      Authorization: 'Token tE9hS7UFRu7A2ztqPZTiP-ASaBxDOFRM',\n      'Content-Type': 'application/json',\n    };\n\n    if (loader) return console.log(loader);\n    setLoader('Loading...');\n\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers,\n      });\n      if (result.error) throw new Error(result.error);\n      setLoader(undefined);\n      return (result = await response.json());\n    } catch (error) {\n      setLoader(undefined);\n\n      alert(error);\n    }\n  };\n  const isFocused = useIsFocused();\n  const [loading, setLoading] = React.useState('');\n\n  const onPressS75jQiCS = async () => {\n    await WebBrowser.openBrowserAsync('https://zaly.me/dashboard');\n  };\n\n  return (\n    <ScreenContainer\n      style={styles.screen}\n      hasSafeArea={true}\n      scrollable={false}\n    >\n      <View style={styles.Viewog}>\n        <Text\n          style={[theme.typography.headline4, { color: theme.colors.strong }]}\n        >\n          {'Danh sách chiến dịch'}\n        </Text>\n\n        <Touchable style={styles.TouchableTg}>\n          <ButtonSolid\n            onPress={async () => {\n              try {\n                await onPressS75jQiCS();\n              } catch (err) {\n                console.error(err);\n              }\n            }}\n            style={[\n              styles.ButtonSolidB3,\n              { backgroundColor: theme.colors.primary },\n            ]}\n            title=\"Mở Zaly\"\n          >\n            {`Sign Up`}\n          </ButtonSolid>\n        </Touchable>\n      </View>\n\n      <View style={styles.Viewh5}>\n        <Fetch\n          key={`2zBTxN8t-${String(isFocused)}`}\n          cacheResponse={false}\n          url={`https://api.airtable.com/v0/appGutSxDtkrkLZw2/Campaign?view=Grid view&maxRecords=80`}\n          method=\"GET\"\n          headers={{\n            Accept: 'application/json',\n            Authorization: 'Bearer keygmdrkdCaPulICK',\n            'Content-Type': 'application/json',\n          }}\n        >\n          {({ loading, error, data, doFetch }) => {\n            if (!data || loading) {\n              return <ActivityIndicator />;\n            }\n\n            if (error) {\n              return (\n                <Text style={{ textAlign: 'center' }}>\n                  There was a problem fetching this data\n                </Text>\n              );\n            }\n\n            return (\n              <FlatList\n                data={data['records']}\n                renderItem={({ item }) => (\n                  <View>\n                    <View\n                      style={[\n                        styles.ViewWA,\n                        {\n                          borderColor: theme.colors.divider,\n                          backgroundColor: theme.colors.background,\n                          borderRadius: theme.roundness,\n                        },\n                      ]}\n                    >\n                      <View style={styles.ViewOI}>\n                        <View style={styles.ViewVq}>\n                          <Text\n                            style={[\n                              theme.typography.headline5,\n                              { color: theme.colors.strong },\n                            ]}\n                          >\n                            {item?.fields?.name}\n                          </Text>\n                        </View>\n\n                        <View\n                          style={[\n                            styles.View_2u,\n                            {\n                              borderRadius: theme.roundness,\n                              borderColor: theme.colors.divider,\n                            },\n                          ]}\n                        >\n                          <Image\n                            style={styles.Imagecx}\n                            resizeMode=\"cover\"\n                            source={{\n                              uri: `${\n                                item && item['fields'] && item['fields']['logo']\n                              }`,\n                            }}\n                          />\n                        </View>\n                      </View>\n\n                      <View style={styles.Viewd1}>\n                        <Text\n                          style={[\n                            styles.TextYd,\n                            { color: theme.colors.medium },\n                          ]}\n                        >\n                          {'Hoa hồng: '}\n                          {item?.fields?.max_commission_rate}\n                          {'%'}\n                        </Text>\n                        <>\n                          {!item?.fields?.max_commission_value ? null : (\n                            <Text\n                              style={[\n                                styles.Textiu,\n                                { color: theme.colors.light },\n                              ]}\n                            >\n                              {'$'}\n                              {item?.fields?.max_commission_value}{' '}\n                            </Text>\n                          )}\n                        </>\n                      </View>\n\n                      <View style={styles.ViewIx}>\n                        <Text\n                          style={[\n                            theme.typography.subtitle2,\n                            styles.Text_77,\n                            { color: theme.colors.medium },\n                          ]}\n                        >\n                          {'Link: '}\n                          {item?.fields?.url}\n                        </Text>\n                      </View>\n\n                      <Touchable\n                        onPress={() => {\n                          try {\n                            CopyLink(item?.fields?.url);\n                          } catch (err) {\n                            console.error(err);\n                          }\n                        }}\n                        style={styles.TouchableBb}\n                      >\n                        <View\n                          style={[\n                            styles.View_6p,\n                            {\n                              backgroundColor: theme.colors.primary,\n                              borderRadius: theme.roundness,\n                            },\n                          ]}\n                        >\n                          <Text\n                            style={[\n                              theme.typography.button,\n                              styles.Textap,\n                              { color: theme.colors.background },\n                            ]}\n                          >\n                            {'Copy Link'}\n                          </Text>\n                        </View>\n                      </Touchable>\n                    </View>\n                  </View>\n                )}\n                numColumns={1}\n                data={data['records']}\n              />\n            );\n          }}\n        </Fetch>\n      </View>\n      <TextInput\n        onChangeText={loading => {\n          try {\n            setLoading(loading);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n        style={[styles.TextInputTC, { borderColor: theme.colors.divider }]}\n        placeholder=\"Change my fieldname to email or password on the right side\"\n        value={loading}\n      />\n    </ScreenContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  ButtonSolidB3: {\n    borderRadius: 8,\n    fontFamily: 'System',\n    fontWeight: '700',\n    textAlign: 'center',\n  },\n  TouchableTg: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  Viewog: {\n    alignItems: 'center',\n    marginBottom: 12,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 12,\n  },\n  ViewVq: {\n    maxWidth: '70%',\n  },\n  Imagecx: {\n    height: 64,\n    width: 64,\n  },\n  View_2u: {\n    minWidth: 64,\n    minHeight: 64,\n    maxWidth: 64,\n    maxHeight: 64,\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderTopWidth: 1,\n    borderRightWidth: 1,\n    marginLeft: 8,\n  },\n  ViewOI: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n  },\n  TextYd: {\n    marginRight: 6,\n    fontFamily: 'System',\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  Textiu: {\n    textDecorationLine: 'line-through',\n    fontSize: 16,\n  },\n  Viewd1: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 2,\n    marginBottom: 2,\n  },\n  Text_77: {\n    marginRight: 4,\n  },\n  ViewIx: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 6,\n  },\n  Textap: {\n    textAlign: 'center',\n  },\n  View_6p: {\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingTop: 12,\n    paddingBottom: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  TouchableBb: {\n    marginTop: 24,\n    alignSelf: 'flex-start',\n  },\n  ViewWA: {\n    borderLeftWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    paddingTop: 24,\n    paddingLeft: 24,\n    paddingBottom: 24,\n    paddingRight: 24,\n    marginTop: 14,\n    marginBottom: 14,\n    flexGrow: 0,\n  },\n  Viewh5: {\n    maxWidth: 600,\n  },\n  TextInputTC: {\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 8,\n    opacity: 0,\n  },\n  screen: {\n    alignSelf: 'center',\n  },\n});\n\nexport default withTheme(ListofCampaignScreen);","// Custom Navigation Drawer / Sidebar with Image and Icon in Menu Options\r\n// https://aboutreact.com/custom-navigation-drawer-sidebar-with-image-and-icon-in-menu-options/\r\n\r\nimport React from 'react';\r\nimport {\r\n  SafeAreaView,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  Linking,\r\n} from 'react-native';\r\n\r\nimport {\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\n\r\nconst CustomSidebarMenu = (props) => {\r\n  const BASE_PATH =\r\n    'https://raw.githubusercontent.com/AboutReact/sampleresource/master/';\r\n  const proileImage = 'react_logo.png';\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      {/*Top Large Image */}\r\n      <Image\r\n        source={{ uri: 'https://zaly.me/logo.svg' }}\r\n        style={styles.sideMenuProfileIcon}\r\n      />\r\n      <DrawerContentScrollView {...props}>\r\n        <DrawerItemList {...props} />\r\n        {/* <DrawerItem\r\n          label=\"Visit Us\"\r\n          onPress={() => Linking.openURL('https://aboutreact.com/')}\r\n        /> */}\r\n       \r\n      </DrawerContentScrollView>\r\n      <Text style={{ fontSize: 16, textAlign: 'center', color: 'grey' }}>\r\n        zaly.me\r\n      </Text>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  sideMenuProfileIcon: {\r\n    resizeMode: 'center',\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100 / 2,\r\n    alignSelf: 'center',\r\n  },\r\n  iconStyle: {\r\n    width: 15,\r\n    height: 15,\r\n    marginHorizontal: 5,\r\n  },\r\n  customItem: {\r\n    padding: 16,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nexport default CustomSidebarMenu;\r\n","// Custom Navigation Drawer / Sidebar with Image and Icon in Menu Options\n// https://aboutreact.com/custom-navigation-drawer-sidebar-with-image-and-icon-in-menu-options/\n\nimport 'react-native-gesture-handler';\n\nimport * as React from 'react';\nimport { View, TouchableOpacity, Image } from 'react-native';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\n\nimport ListofCampaignScreen from './screens/ListofCampaignScreen.js';\n\n\n// Import Custom Sidebar\nimport CustomSidebarMenu from './CustomSidebarMenu';\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nconst NavigationDrawerStructure = (props) => {\n  //Structure for the navigatin Drawer\n  const toggleDrawer = () => {\n    //Props to open/close the drawer\n    props.navigationProps.toggleDrawer();\n  };\n\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <TouchableOpacity onPress={toggleDrawer}>\n        {/*Donute Button Image */}\n        <Image\n          source={{\n            uri:\n              'https://raw.githubusercontent.com/AboutReact/sampleresource/master/drawerWhite.png',\n          }}\n          style={{ width: 25, height: 25, marginLeft: 5 }}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nfunction ListofCampaignScreenStack({ navigation }) {\n  return (\n    <Stack.Navigator initialRouteName=\"ListofCampaignScreen\">\n      <Stack.Screen\n        name=\"ListofCampaignScreen\"\n        component={ListofCampaignScreen}\n        options={{\n          title: 'Zaly KOC', //Set Header Title\n          headerLeft: () => (\n            <NavigationDrawerStructure navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: '#304057', //Set Header color\n          },\n          headerTintColor: '#fff', //Set Header text color\n          headerTitleStyle: {\n            fontWeight: 'bold', //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n}\n\n// function secondScreenStack({ navigation }) {\n//   return (\n//     <Stack.Navigator\n//       initialRouteName=\"SecondPage\"\n//       screenOptions={{\n//         headerLeft: () => (\n//           <NavigationDrawerStructure navigationProps={navigation} />\n//         ),\n//         headerStyle: {\n//           backgroundColor: '#f4511e', //Set Header color\n//         },\n//         headerTintColor: '#fff', //Set Header text color\n//         headerTitleStyle: {\n//           fontWeight: 'bold', //Set Header text style\n//         },\n//       }}>\n//       <Stack.Screen\n//         name=\"SecondPage\"\n//         component={SecondPage}\n//         options={{\n//           title: 'Second Page', //Set Header Title\n//         }}\n//       />\n//       <Stack.Screen\n//         name=\"ThirdPage\"\n//         component={ThirdPage}\n//         options={{\n//           title: 'Third Page', //Set Header Title\n//         }}\n//       />\n//     </Stack.Navigator>\n//   );\n// }\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerContentOptions={{\n          activeTintColor: '#e91e63',\n          itemStyle: { marginVertical: 5 },\n        }}\n        drawerContent={(props) => <CustomSidebarMenu {...props} />}>\n        <Drawer.Screen\n          name=\"ListofCampaignScreenStack\"\n          options={{ drawerLabel: 'ListofCampaignScreenStack' }}\n          component={ListofCampaignScreenStack}\n        />\n       \n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}