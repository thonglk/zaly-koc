{"version":3,"sources":["Icon.tsx"],"names":["VectorIcons","require","Icon","name","color","size","style","rest","iconSet","indexOf","split","IconSet","styles","container","width","height","Object","prototype","hasOwnProperty","call","uri","tintColor","StyleSheet","create","alignItems","justifyContent","overflow","Platform","select","web","cursor","userSelect","SEED_DATA","tag","description","category","COMPONENT_TYPES","basic","layout","props","group","GROUPS","label","defaultValue","min","max","step","precision"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Image,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ImageStyle,\n  Platform,\n} from \"react-native\";\n\nimport {\n  COMPONENT_TYPES,\n  GROUPS,\n  createNumberProp,\n  createColorProp,\n  createIconProp,\n} from \"@draftbit/types\";\n\n// This must use require to work in both web as a published project and in Snack\nconst VectorIcons = require(\"@expo/vector-icons\");\n\ntype Props = {\n  name: string | number | { uri: string };\n  color?: string;\n  size: number;\n  style?: StyleProp<ImageStyle>;\n} & ViewProps;\n\nconst Icon: React.FC<Props> = ({ name, color, size, style, ...rest }) => {\n  if (!name) return null;\n\n  let iconSet = \"MaterialIcons\";\n  if (typeof name === \"string\" && name.indexOf(\"/\") !== -1) {\n    [iconSet, name] = name.split(\"/\");\n  }\n\n  if (typeof name === \"string\") {\n    const IconSet = VectorIcons[iconSet];\n\n    return (\n      <View style={[styles.container, { width: size, height: size }, style]}>\n        <IconSet {...rest} name={name} color={color} size={size} />\n      </View>\n    );\n  } else if (\n    (typeof name === \"object\" &&\n      name !== null &&\n      Object.prototype.hasOwnProperty.call(name, \"uri\") &&\n      typeof name.uri === \"string\") ||\n    typeof name === \"number\"\n  ) {\n    return (\n      <Image\n        {...rest}\n        source={name}\n        style={[\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n          },\n          style,\n        ]}\n      />\n    );\n  }\n\n  return (\n    <View\n      {...rest}\n      style={[\n        {\n          width: size,\n          height: size,\n        },\n        styles.container,\n        style,\n      ]}\n    >\n      {name}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\",\n    ...Platform.select({\n      web: {\n        cursor: \"pointer\",\n        userSelect: \"none\",\n      },\n    }),\n  },\n});\n\nexport default Icon;\n\nexport const SEED_DATA = {\n  name: \"Icon\",\n  tag: \"Icon\",\n  description: \"An icon\",\n  category: COMPONENT_TYPES.basic,\n  layout: {},\n  props: {\n    name: createIconProp(),\n    color: createColorProp(),\n    size: createNumberProp({\n      group: GROUPS.basic,\n      label: \"Size\",\n      description: \"Width and height of your icon\",\n      defaultValue: 24,\n      min: 16,\n      max: 128,\n      step: 1,\n      precision: 0,\n    }),\n  },\n};\n"]}