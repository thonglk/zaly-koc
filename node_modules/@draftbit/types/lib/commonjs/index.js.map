{"version":3,"sources":["index.ts"],"names":["RowDirection"],"mappings":";;;;;;;;;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IAyBYA,Y;;;WAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,4BAAAA,Y","sourcesContent":["import type { ComponentType, ComponentPropsWithoutRef } from \"react\";\nexport * from \"./component-types\";\n\nexport type Font = {\n  fontFamily: string;\n  fontWeight?:\n    | \"normal\"\n    | \"bold\"\n    | \"100\"\n    | \"200\"\n    | \"300\"\n    | \"400\"\n    | \"500\"\n    | \"600\"\n    | \"700\"\n    | \"800\"\n    | \"900\";\n};\n\nexport type Fonts = {\n  regular: Font;\n  medium: Font;\n  light: Font;\n  thin: Font;\n};\n\nexport enum RowDirection {\n  Row = \"row\",\n  RowReverse = \"row-reverse\",\n}\n\nexport type colorTypes =\n  | \"primary\"\n  | \"secondary\"\n  | \"surface\"\n  | \"background\"\n  | \"error\"\n  | \"divider\"\n  | \"strong\"\n  | \"medium\"\n  | \"light\"\n  | \"strongInverse\"\n  | \"mediumInverse\"\n  | \"lightInverse\";\n\nexport type Theme = any;\n\n// export type Theme = {\n//   dark: boolean;\n//   mode?: \"adaptive\" | \"exact\";\n//   roundness: number;\n//   colors: {\n//     primary: string;\n//     background: string;\n//     surface: string;\n//     accent: string;\n//     error: string;\n//     text: string;\n//     onSurface: string;\n//     onBackground: string;\n//     disabled: string;\n//     placeholder: string;\n//     backdrop: string;\n//     notification: string;\n//   };\n//   fonts: Fonts;\n//   animation: {\n//     scale: number;\n//   };\n// };\n\nexport type $Omit<T, K> = Pick<T, Exclude<keyof T, K>>;\nexport type $RemoveChildren<T extends ComponentType<any>> = $Omit<\n  ComponentPropsWithoutRef<T>,\n  \"children\"\n>;\n\nexport type EllipsizeProp = \"head\" | \"middle\" | \"tail\" | \"clip\";\n"]}