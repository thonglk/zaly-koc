import * as React from "react";
import { View } from "react-native";
import { COMPONENT_TYPES, createFieldNameProp, createDirectionProp, } from "@draftbit/types";
import { radioButtonGroupContext, Direction } from "./context";
import { usePrevious } from "../../hooks";
const { Provider } = radioButtonGroupContext;
const RadioButtonGroup = ({ direction = Direction.Vertical, value, onValueChange = () => { }, initialValue, style, children, ...rest }) => {
    const previousInitialValue = usePrevious(initialValue);
    React.useEffect(() => {
        if (initialValue !== previousInitialValue) {
            onValueChange(initialValue);
        }
    }, [initialValue, previousInitialValue, onValueChange]);
    const _containerStyle = [
        {
            flexDirection: direction === Direction.Horizontal ? "row" : "column",
        },
    ];
    if (direction !== Direction.Vertical) {
        _containerStyle.push({
            alignItems: "center",
        });
    }
    return (React.createElement(View, { style: [{ minHeight: 40 }, style], ...rest },
        React.createElement(Provider, { value: { value, onValueChange, direction } },
            React.createElement(View, { style: _containerStyle }, children))));
};
export default RadioButtonGroup;
export const SEED_DATA = {
    name: "Radio Button Group",
    tag: "RadioButtonGroup",
    category: COMPONENT_TYPES.input,
    layout: {},
    props: {
        direction: createDirectionProp(),
        fieldName: createFieldNameProp({
            handlerPropName: "onValueChange",
            valuePropName: "value",
            defaultValue: "radioButtonGroupValue",
        }),
    },
};
