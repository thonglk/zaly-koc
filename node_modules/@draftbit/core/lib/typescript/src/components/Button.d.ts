import { TextStyle, PressableProps } from "react-native";
import type { Theme } from "../styles/DefaultTheme";
import type { IconSlot } from "../interfaces/Icon";
declare type Props = {
    title: string;
    disabled: boolean;
    loading: boolean;
    style?: TextStyle;
    onPress: () => void;
    icon?: string;
    theme: Theme;
} & PressableProps & IconSlot;
declare const ButtonSolid: any;
export { ButtonSolid };
declare const ButtonOutline: any;
export { ButtonOutline };
export declare const BaseLink: ({ style, theme, ...props }: Props) => JSX.Element;
declare const Link: any;
export { Link };
export declare const SEED_DATA: ({
    name: string;
    tag: string;
    category: string;
    layout: {
        backgroundColor: string;
        borderWidth: number;
        textAlign: string;
        borderRadius: number;
        fontFamily: string;
    };
    props: {
        icon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        title: any;
        disabled: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        loading: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        onPress: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
    };
} | {
    name: string;
    tag: string;
    category: string;
    layout: {
        backgroundColor: string;
        textAlign: string;
        borderRadius: number;
        fontFamily: string;
    };
    props: {
        icon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        title: any;
        disabled: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        loading: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        onPress: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
    };
} | {
    name: string;
    tag: string;
    category: string;
    layout: {
        backgroundColor: string;
        color: string;
        padding: number;
        minHeight: undefined;
        borderRadius: number;
        fontFamily: string;
    };
    props: {
        icon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        title: any;
        disabled: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        loading: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        onPress: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
    };
})[];
