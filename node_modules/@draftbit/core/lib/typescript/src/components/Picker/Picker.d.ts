import * as React from "react";
import { PickerComponentProps, PickerOption } from "./PickerTypes";
declare type Props = PickerComponentProps & {
    placeholder?: string;
    value: string;
    options: PickerOption[] | string[];
};
declare const _default: React.ComponentType<import("@draftbit/react-theme-provider").$Without<Props, "theme"> & {
    theme?: import("@draftbit/react-theme-provider").$DeepPartial<any> | undefined;
}> & import("@draftbit/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<React.ComponentType<Props> & React.FC<Props>, {}>;
export default _default;
export declare const SEED_DATA: ({
    name: string;
    tag: string;
    description: string;
    category: string;
    preview_image_url: string;
    supports_list_render: boolean;
    props: {
        type: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            options: string[];
            editable: boolean;
            required: boolean;
            group: string;
        };
        label: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        placeholder: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            editable: boolean;
            required: boolean;
        };
        placeholderTextColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        assistiveText: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        options: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            options: never[];
            defaultValue: null;
        };
        disabled: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
        };
        error: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
        };
        leftIconName: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        leftIconMode: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            options: string[];
            editable: boolean;
            required: boolean;
        };
        rightIconName: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        fieldName: {
            defaultValue: string;
            handlerPropName: string;
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            valuePropName: string;
            editable: boolean;
            required: boolean;
        };
    };
    layout: {};
} | {
    name: string;
    tag: string;
    description: string;
    category: string;
    preview_image_url: string;
    supports_list_render: boolean;
    props: {
        type: {
            label: string;
            description: string;
            group: string;
            formType: string;
            propType: string;
            defaultValue: string;
            editable: boolean;
            required: boolean;
            options?: undefined;
        };
        label: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        placeholder: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            editable: boolean;
            required: boolean;
        };
        placeholderTextColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        assistiveText: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        options: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            options: never[];
            defaultValue: null;
        };
        disabled: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
        };
        error: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
        };
        leftIconName: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        leftIconMode: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            options: string[];
            editable: boolean;
            required: boolean;
        };
        rightIconName: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        fieldName: {
            defaultValue: string;
            handlerPropName: string;
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            valuePropName: string;
            editable: boolean;
            required: boolean;
        };
    };
    layout: {};
})[];
