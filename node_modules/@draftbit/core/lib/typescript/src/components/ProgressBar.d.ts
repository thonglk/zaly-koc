import React, { Component } from "react";
import { Animated, ViewProps, StyleProp, ViewStyle, LayoutChangeEvent } from "react-native";
declare type Props = {
    borderColor?: string;
    borderRadius?: number;
    borderWidth?: number;
    children?: React.ReactNode;
    color?: string;
    height?: number;
    style?: StyleProp<ViewStyle>;
    unfilledColor?: string;
    width?: number;
    animated?: boolean;
    indeterminate?: boolean;
    indeterminateAnimationDuration?: number;
    progress?: number;
    useNativeDriver?: boolean;
    animationConfig?: Animated.AnimationConfig;
    animationType?: "decay" | "timing" | "spring";
} & ViewProps;
interface State {
    width: number;
    progress: Animated.Value;
    animationValue: Animated.Value;
}
export default class ProgressBar extends Component<Props, State> {
    constructor(props: Props);
    componentDidMount(): void;
    componentDidUpdate(prevProps: Props): void;
    handleLayout: (event: LayoutChangeEvent) => void;
    animate(): void;
    render(): JSX.Element;
}
export declare const SEED_DATA: {
    name: string;
    tag: string;
    description: string;
    category: string;
    preview_image_url: string;
    supports_list_render: boolean;
    props: {
        progress: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        color: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        unfilledColor: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        borderRadius: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        borderWidth: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        borderColor: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
        };
        animationType: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            options: string[];
            editable: boolean;
            required: boolean;
        };
    };
    layout: {
        width: number;
        height: number;
    };
}[];
export {};
