import * as React from "react";
import { StyleProp, ViewStyle, TextStyle } from "react-native";
import themeT from "../styles/DefaultTheme";
import { colorTypes } from "@draftbit/types";
declare type Props = {
    progress?: number;
    style?: StyleProp<ViewStyle>;
    color?: colorTypes;
    size?: number;
    showsText?: boolean;
    unfilledColor?: colorTypes;
    strokeCap?: "butt" | "square" | "round" | undefined;
    textStyle?: StyleProp<TextStyle>;
    thickness?: number;
    theme: typeof themeT;
};
declare const _default: React.ComponentType<import("@draftbit/react-theme-provider").$Without<Props, "theme"> & {
    theme?: import("@draftbit/react-theme-provider").$DeepPartial<any> | undefined;
}> & import("@draftbit/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<React.ComponentType<Props> & React.FC<Props>, {}>;
export default _default;
export declare const SEED_DATA: {
    name: string;
    tag: string;
    description: string;
    category: string;
    preview_image_url: string;
    supports_list_render: boolean;
    props: {
        progress: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            defaultValue: string;
            required: boolean;
            formType: string;
            propType: string;
        };
        unfilledColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            defaultValue: null;
            required: boolean;
            formType: string;
            propType: string;
        };
        size: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        showsText: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
        };
        textStyle: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        thickness: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: number;
            min: number;
            max: number;
            step: number;
            precision: number;
            editable: boolean;
            required: boolean;
        };
        strokeCap: {
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            options: string[];
            editable: boolean;
            required: boolean;
        };
    };
    layout: {
        width: number;
        height: number;
    };
};
