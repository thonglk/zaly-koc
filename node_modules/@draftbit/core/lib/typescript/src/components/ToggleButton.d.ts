import * as React from "react";
import { colorTypes } from "@draftbit/types";
import { StyleProp, ViewStyle } from "react-native";
import type { Theme } from "../styles/DefaultTheme";
import type { IconSlot } from "../interfaces/Icon";
declare type Props = {
    icon: string;
    toggled?: boolean;
    onPress?: (toggled: boolean) => void;
    initialValue?: boolean;
    disabled?: boolean;
    color?: colorTypes;
    colorSecondary?: colorTypes;
    borderColor?: colorTypes;
    iconSize?: number;
    width?: number;
    height?: number;
    style?: StyleProp<ViewStyle>;
    theme: Theme;
} & IconSlot;
declare const _default: React.ComponentType<import("@draftbit/react-theme-provider").$Without<Props, "theme"> & {
    theme?: import("@draftbit/react-theme-provider").$DeepPartial<any> | undefined;
}> & import("@draftbit/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<React.ComponentType<Props> & React.FC<Props>, {}>;
export default _default;
export declare const SEED_DATA: {
    name: string;
    tag: string;
    category: string;
    layout: {};
    props: {
        icon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        iconSize: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: number;
            options: number[];
        };
        fieldName: {
            handlerPropName: string;
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            valuePropName: string;
            editable: boolean;
            required: boolean;
        };
        onPress: {
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
            group: string;
        };
        disabled: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        colorSecondary: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        borderColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        width: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        height: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
    };
};
