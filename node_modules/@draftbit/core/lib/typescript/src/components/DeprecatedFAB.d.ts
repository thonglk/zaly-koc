import * as React from "react";
import { TouchableHighlightProps, StyleProp, ViewStyle } from "react-native";
import type { Theme } from "../styles/DefaultTheme";
import type { IconSlot } from "../interfaces/Icon";
/**
 * A floating action button represents the primary action in an application.
 *
 * <div class="screenshots">
 *   <img src="screenshots/fab-1.png" />
 *   <img src="screenshots/fab-2.png" />
 * </div>
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { FAB } from '@draftbit/ui';
 *
 * const MyComponent = () => (
 *   <FAB
 *     style={styles.fab}
 *     type="outline"
 *     icon="add"
 *     onPress={() => console.log('Pressed')}
 *   />
 * );
 *
 * const styles = StyleSheet.create({
 *   fab: {
 *     position: 'absolute',
 *     margin: 16,
 *     right: 0,
 *     bottom: 0,
 *   },
 * })
 *
 * export default MyComponent;
 * ```
 */
declare type Props = {
    disabled?: boolean;
    type?: "solid" | "extended" | "outline" | "fixed" | "standard";
    loading?: boolean;
    icon?: string;
    color?: string;
    label?: string;
    onPress: () => void;
    elevation?: number;
    theme: Theme;
    style?: StyleProp<ViewStyle>;
} & TouchableHighlightProps & IconSlot;
declare const _default: React.ComponentType<import("@draftbit/react-theme-provider").$Without<Props, "theme"> & {
    theme?: import("@draftbit/react-theme-provider").$DeepPartial<any> | undefined;
}> & import("@draftbit/react-theme-provider/typings/hoist-non-react-statics").NonReactStatics<React.ComponentType<Props> & React.FC<Props>, {}>;
export default _default;
export declare const SEED_DATA: ({
    name: string;
    tag: string;
    category: string;
    description: string;
    preview_image_url: string;
    props: {
        type: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: string;
        };
        label: {
            group: string;
            label: string;
            description: string;
            required: boolean;
            editable: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        icon: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        onPress: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
    };
    layout: {};
} | {
    name: string;
    tag: string;
    category: string;
    preview_image_url: string;
    props: {
        type: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            propType: string;
            formType: string;
            defaultValue: string;
        };
        label: {
            group: string;
            label: string;
            description: string;
            required: boolean;
            editable: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        icon: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        onPress: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
    };
    layout: {};
    description?: undefined;
} | {
    name: string;
    tag: string;
    category: string;
    preview_image_url: string;
    props: {
        type: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: string;
        };
        icon: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        label: {
            group: string;
            label: string;
            description: string;
            required: boolean;
            editable: boolean;
            formType: string;
            propType: string;
            defaultValue: string;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
        onPress: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            formType: string;
            propType: string;
            defaultValue: null;
        };
    };
    layout: {};
    description?: undefined;
})[];
