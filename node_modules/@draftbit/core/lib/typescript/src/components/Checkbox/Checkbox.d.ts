import * as React from "react";
import { TouchableHighlightProps, StyleProp, ViewStyle } from "react-native";
import type { IconSlot } from "../../interfaces/Icon";
export declare enum CheckboxStatus {
    Checked = "checked",
    Unchecked = "unchecked",
    Indeterminate = "indeterminate"
}
export interface CheckboxProps {
    status?: CheckboxStatus;
    disabled?: boolean;
    onPress?: (checked: boolean) => void;
    color?: string;
    uncheckedColor?: string;
    indeterminateColor?: string;
    checkedIcon?: string;
    uncheckedIcon?: string;
    indeterminateIcon?: string;
    initialValue?: boolean;
    size?: number;
    style?: StyleProp<ViewStyle>;
}
declare const Checkbox: React.FC<CheckboxProps & TouchableHighlightProps & IconSlot>;
export default Checkbox;
export declare const SEED_DATA: {
    name: string;
    tag: string;
    category: string;
    props: {
        fieldName: {
            handlerPropName: string;
            group: string;
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            valuePropName: string;
            editable: boolean;
            required: boolean;
        };
        color: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        uncheckedColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        indeterminateColor: {
            group: string;
            label: string;
            description: string;
            editable: boolean;
            required: boolean;
            defaultValue: null;
            formType: string;
            propType: string;
        };
        disabled: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: boolean;
            editable: boolean;
            required: boolean;
            group: string;
        };
        size: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: null;
            editable: boolean;
            required: boolean;
            step: number;
        };
        checkedIcon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        uncheckedIcon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
        indeterminateIcon: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            required: boolean;
            editable: boolean;
            group: string;
        };
    };
};
