import * as React from "react";
import { StyleProp, ViewStyle } from "react-native";
import type { ViewStyleProp } from "react-native/Libraries/StyleSheet/StyleSheet";
export declare function Center({ width, height, children, bgColor, style, ...rest }: {
    width: number;
    height: number;
    bgColor: string;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare function Circle({ size, bgColor, children, style, ...rest }: {
    size: number;
    bgColor: string;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare function Square({ size, bgColor, children, style, ...rest }: {
    size: number;
    bgColor: string;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare function Row({ justifyContent, alignItems, children, style, ...rest }: {
    alignItems: ViewStyleProp.alignItems;
    justifyContent: ViewStyleProp.justifyContent;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare function Spacer({ top, right, bottom, left, children, style, ...rest }: {
    top?: number;
    right?: number;
    left?: number;
    bottom?: number;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare function Stack({ children, justifyContent, alignItems, style, ...rest }: {
    justifyContent: ViewStyleProp.justifyContent;
    alignItems: ViewStyleProp.alignItems;
    children: React.ReactNode;
    style?: StyleProp<ViewStyle>;
}): JSX.Element;
export declare const SEED_DATA: ({
    name: string;
    tag: string;
    category: string;
    props: {
        justifyContent: {
            label: string;
            group: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            editable: boolean;
            required: boolean;
        };
        alignItems: {
            label: string;
            group: string;
            description: string;
            formType: string;
            propType: string;
            defaultValue: string;
            editable: boolean;
            required: boolean;
        };
        top?: undefined;
        right?: undefined;
        bottom?: undefined;
        left?: undefined;
        width?: undefined;
        height?: undefined;
        bgColor?: undefined;
        size?: undefined;
    };
} | {
    name: string;
    tag: string;
    category: string;
    props: {
        top: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        right: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        bottom: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        left: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        justifyContent?: undefined;
        alignItems?: undefined;
        width?: undefined;
        height?: undefined;
        bgColor?: undefined;
        size?: undefined;
    };
} | {
    name: string;
    tag: string;
    category: string;
    props: {
        width: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        height: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        bgColor: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            editable: boolean;
            required: boolean;
            defaultValue: string;
            group: string;
        };
        justifyContent?: undefined;
        alignItems?: undefined;
        top?: undefined;
        right?: undefined;
        bottom?: undefined;
        left?: undefined;
        size?: undefined;
    };
} | {
    name: string;
    tag: string;
    category: string;
    props: {
        size: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            group: string;
            defaultValue: number;
            editable: boolean;
            required: boolean;
        };
        bgColor: {
            label: string;
            description: string;
            formType: string;
            propType: string;
            editable: boolean;
            required: boolean;
            defaultValue: string;
            group: string;
        };
        justifyContent?: undefined;
        alignItems?: undefined;
        top?: undefined;
        right?: undefined;
        bottom?: undefined;
        left?: undefined;
        width?: undefined;
        height?: undefined;
    };
})[];
