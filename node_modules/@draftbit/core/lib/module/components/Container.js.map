{"version":3,"sources":["Container.tsx"],"names":["React","View","ImageBackground","StyleSheet","withTheme","Elevation","GROUPS","COMPONENT_TYPES","FORM_TYPES","PROP_TYPES","createElevationType","createImageProp","createResizeModeProp","Container","useThemeGutterPadding","borderColor","borderWidth","backgroundColor","backgroundImage","backgroundImageResizeMode","elevation","style","children","theme","rest","flex","flexGrow","flexWrap","flexBasis","flexShrink","flexDirection","alignContent","justifyContent","alignItems","styleProp","flatten","containerStyle","width","innerStyle","paddingHorizontal","Wrap","uri","SEED_DATA","name","tag","description","category","deprecated","layout","height","props","group","basic","label","formType","boolean","propType","BOOLEAN","defaultValue","editable","required"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  ImageBackground,\n  ImageSourcePropType,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\n\nimport Elevation from \"./Elevation\";\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  createElevationType,\n  createImageProp,\n  createResizeModeProp,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport { ResizeModeType } from \"./ResizeMode\";\n\ntype Props = {\n  theme: Theme;\n  useThemeGutterPadding: boolean;\n  borderColor: string;\n  borderWidth: number;\n  backgroundColor: string;\n  backgroundImage?: string | ImageSourcePropType;\n  backgroundImageResizeMode?: ResizeModeType;\n  elevation?: number;\n  style?: StyleProp<ViewStyle>;\n  children?: React.ReactNode;\n};\n\nconst Container: React.FC<Props> = ({\n  useThemeGutterPadding,\n  borderColor,\n  borderWidth,\n  backgroundColor,\n  backgroundImage,\n  backgroundImageResizeMode,\n  elevation,\n  style,\n  children,\n  theme, // eslint-disable-line @typescript-eslint/no-unused-vars\n  ...rest\n}) => {\n  const {\n    flex,\n    flexGrow,\n    flexWrap,\n    flexBasis,\n    flexShrink,\n    flexDirection,\n    alignContent,\n    justifyContent,\n    alignItems,\n    ...styleProp\n  } = StyleSheet.flatten(style) || {};\n\n  const containerStyle: StyleProp<ViewStyle> = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    width: \"100%\",\n    ...styleProp,\n  };\n\n  const innerStyle: StyleProp<ViewStyle> = {\n    paddingHorizontal: useThemeGutterPadding ? 16 : 0,\n    flex,\n    flexGrow,\n    flexWrap,\n    flexBasis,\n    flexShrink,\n    flexDirection,\n    alignContent,\n    justifyContent,\n    alignItems,\n  };\n\n  const Wrap = elevation ? Elevation : View;\n\n  if (elevation) {\n    containerStyle.elevation = elevation;\n  }\n\n  return (\n    <Wrap style={[containerStyle, style]} {...rest}>\n      {backgroundImage ? (\n        <ImageBackground\n          source={\n            typeof backgroundImage === \"string\"\n              ? { uri: backgroundImage }\n              : backgroundImage\n          }\n          resizeMode={backgroundImageResizeMode}\n          style={{\n            flex: 1,\n          }}\n        >\n          <View style={innerStyle}>{children}</View>\n        </ImageBackground>\n      ) : (\n        <View style={innerStyle}>{children}</View>\n      )}\n    </Wrap>\n  );\n};\n\nexport default withTheme(Container);\n\nexport const SEED_DATA = {\n  name: \"Container\",\n  tag: \"Container\",\n  description: \"A container component with gutter padding\",\n  category: COMPONENT_TYPES.deprecated,\n  layout: {\n    height: 250,\n  },\n  props: {\n    useThemeGutterPadding: {\n      group: GROUPS.basic,\n      label: \"Use gutter padding\",\n      description:\n        \"When true, uses the theme gutter spacing as the container's horizontal padding\",\n      formType: FORM_TYPES.boolean,\n      propType: PROP_TYPES.BOOLEAN,\n      defaultValue: false,\n      editable: false,\n      required: true,\n    },\n    backgroundImage: createImageProp({\n      label: \"Background Image\",\n      description: \"Apply a custom background image\",\n      defaultValue: null,\n    }),\n    backgroundImageResizeMode: createResizeModeProp(),\n    elevation: createElevationType(0),\n  },\n};\n"]}