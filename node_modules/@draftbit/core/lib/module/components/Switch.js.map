{"version":3,"sources":["Switch.tsx"],"names":["React","Switch","NativeSwitch","withTheme","FormRow","COMPONENT_TYPES","GROUPS","createBoolProp","createColorProp","createFieldNameProp","createTextProp","createRowDirectionProp","RowDirection","usePrevious","value","initialValue","disabled","onValueChange","activeTrackColor","inactiveTrackColor","activeThumbColor","inactiveThumbColor","theme","style","rest","activeTrackThemeColor","colors","primary","inactiveTrackThemeColor","activeThumbThemeColor","inactiveThumbThemeColor","checked","setChecked","useState","useEffect","previousInitialValue","false","true","bool","Row","label","direction","SwitchRow","SEED_DATA","name","tag","category","input","layout","props","description","fieldName","handlerPropName","valuePropName","defaultValue","required","group","data"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Switch as NativeSwitch,\n  SwitchProps,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport FormRow from \"./FormRow\";\nimport {\n  COMPONENT_TYPES,\n  GROUPS,\n  createBoolProp,\n  createColorProp,\n  createFieldNameProp,\n  createTextProp,\n  createRowDirectionProp,\n  RowDirection,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport { usePrevious } from \"../hooks\";\n\ntype Props = {\n  value: boolean;\n  disabled?: boolean;\n  onValueChange?: (value: boolean) => void;\n  initialValue?: boolean;\n  theme: Theme;\n  activeTrackColor: string;\n  inactiveTrackColor: string;\n  activeThumbColor: string;\n  inactiveThumbColor: string;\n} & SwitchProps;\n\nfunction Switch({\n  value = false,\n  initialValue,\n  disabled,\n  onValueChange,\n  activeTrackColor,\n  inactiveTrackColor,\n  activeThumbColor,\n  inactiveThumbColor,\n  theme,\n  style,\n  ...rest\n}: Props) {\n  const activeTrackThemeColor = activeTrackColor || theme.colors.primary;\n  const inactiveTrackThemeColor = inactiveTrackColor || \"#EEE\";\n\n  const activeThumbThemeColor = activeThumbColor || \"#FFF\";\n  const inactiveThumbThemeColor = inactiveThumbColor || \"#FFF\";\n\n  const [checked, setChecked] = React.useState(value);\n  React.useEffect(() => {\n    if (value !== checked) {\n      setChecked(value);\n    }\n  }, [value, checked]);\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      setChecked(initialValue);\n      onValueChange && onValueChange(initialValue);\n    }\n  }, [initialValue, previousInitialValue, setChecked, onValueChange]);\n\n  return (\n    <NativeSwitch\n      value={checked}\n      disabled={disabled}\n      trackColor={{\n        false: inactiveTrackThemeColor,\n        true: activeTrackThemeColor,\n      }}\n      thumbColor={value ? activeThumbThemeColor : inactiveThumbThemeColor}\n      // @ts-ignore react-native-web only\n      activeThumbColor={activeThumbThemeColor}\n      ios_backgroundColor={inactiveTrackThemeColor}\n      style={style}\n      onValueChange={(bool) => {\n        setChecked(bool);\n        onValueChange && onValueChange(bool);\n      }}\n      {...rest}\n    />\n  );\n}\n\ntype RowProps = {\n  label: string;\n  direction: RowDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nfunction Row({\n  label = \"Label\",\n  direction = RowDirection.Row,\n  style,\n  value = false,\n  disabled,\n  onValueChange,\n  activeTrackColor,\n  inactiveTrackColor,\n  activeThumbColor,\n  inactiveThumbColor,\n  theme,\n  ...rest\n}: Props & RowProps) {\n  const [checked, setChecked] = React.useState(value);\n\n  React.useEffect(() => {\n    if (value !== checked) {\n      setChecked(value);\n    }\n  }, [value, checked]);\n\n  return (\n    <FormRow\n      disabled={disabled}\n      onPress={() => {\n        setChecked(!checked);\n        onValueChange && onValueChange(!checked);\n      }}\n      label={label}\n      direction={direction}\n      style={style}\n      {...rest}\n    >\n      <Switch\n        theme={theme}\n        value={checked}\n        disabled={disabled}\n        onValueChange={onValueChange}\n        activeTrackColor={activeTrackColor}\n        inactiveTrackColor={inactiveTrackColor}\n        activeThumbColor={activeThumbColor}\n        inactiveThumbColor={inactiveThumbColor}\n      />\n    </FormRow>\n  );\n}\n\nconst SwitchRow = withTheme(Row);\nexport { SwitchRow };\n\nexport default withTheme(Switch);\n\nexport const SEED_DATA = [\n  {\n    name: \"Switch\",\n    tag: \"Switch\",\n    category: COMPONENT_TYPES.input,\n    layout: {},\n    props: {\n      disabled: createBoolProp({\n        label: \"Disabled\",\n        description: \"Boolean to handle disabling the switch\",\n      }),\n      fieldName: createFieldNameProp({\n        handlerPropName: \"onValueChange\",\n        valuePropName: \"value\",\n        defaultValue: \"switchValue\",\n      }),\n      activeTrackColor: createColorProp({\n        label: \"Active Track Color\",\n      }),\n      inactiveTrackColor: createColorProp({\n        label: \"Inactive Track Color\",\n      }),\n      activeThumbColor: createColorProp({\n        label: \"Active Thumb Color\",\n      }),\n      inactiveThumbColor: createColorProp({\n        label: \"Inactive Thumb Color\",\n      }),\n    },\n  },\n  {\n    name: \"Switch Row\",\n    tag: \"SwitchRow\",\n    category: COMPONENT_TYPES.input,\n    layout: {},\n    props: {\n      label: createTextProp({\n        label: \"Label\",\n        description: \"Label to show with the checkbox\",\n        required: true,\n        defaultValue: \"First Option\",\n      }),\n      direction: createRowDirectionProp(),\n      disabled: createBoolProp({\n        label: \"Disabled\",\n        description: \"Boolean to handle disabling the switch\",\n        group: GROUPS.data,\n      }),\n      fieldName: createFieldNameProp({\n        handlerPropName: \"onValueChange\",\n        valuePropName: \"value\",\n        defaultValue: \"switchValue\",\n      }),\n      activeTrackColor: createColorProp({\n        label: \"Active Track Color\",\n      }),\n      inactiveTrackColor: createColorProp({\n        label: \"Inactive Track Color\",\n      }),\n      activeThumbColor: createColorProp({\n        label: \"Active Thumb Color\",\n      }),\n      inactiveThumbColor: createColorProp({\n        label: \"Inactive Thumb Color\",\n      }),\n    },\n  },\n];\n"]}