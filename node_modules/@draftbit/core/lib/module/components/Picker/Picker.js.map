{"version":3,"sources":["Picker.tsx"],"names":["React","withTheme","PickerComponent","GROUPS","COMPONENT_TYPES","FORM_TYPES","PROP_TYPES","FIELD_NAME","usePrevious","normalizeOptions","options","length","map","option","label","value","Error","Picker","placeholder","onValueChange","onValueChangeOverride","initialValue","props","useCallback","itemValue","itemIndex","normalizedOptions","previousInitialValue","useEffect","index","findIndex","opt","pickerOptions","SEED_DATA_PROPS","group","data","description","formType","string","propType","STRING","defaultValue","editable","required","basic","placeholderTextColor","color","assistiveText","array","OBJECT","disabled","boolean","BOOLEAN","error","leftIconName","icon","ASSET","leftIconMode","flatArray","rightIconName","fieldName","handlerPropName","SEED_DATA","name","tag","category","input","preview_image_url","supports_list_render","type","layout","uncategorized"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { withTheme } from \"../../theming\";\n//@ts-ignore\nimport PickerComponent from \"./PickerComponent\"; //unable to find file due to using .android/.web/.ios\nimport { PickerComponentProps, PickerOption } from \"./PickerTypes\";\n\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  FIELD_NAME,\n} from \"@draftbit/types\";\nimport { usePrevious } from \"../../hooks\";\n\ntype Props = PickerComponentProps & {\n  placeholder?: string;\n  value: string;\n  options: PickerOption[] | string[];\n};\n\nfunction normalizeOptions(options: Props[\"options\"]): PickerOption[] {\n  if (options.length === 0) {\n    return [];\n  }\n\n  if (typeof options[0] === \"string\") {\n    return (options as string[]).map((option) => ({\n      label: option,\n      value: option,\n    }));\n  }\n\n  if (options[0].label && options[0].value) {\n    return options as PickerOption[];\n  }\n\n  throw new Error(\n    'Picker options must be either an array of strings or array of { \"label\": string; \"value\": string; } objects.'\n  );\n}\n\nconst Picker: React.FC<Props> = ({\n  options = [],\n  placeholder,\n  onValueChange: onValueChangeOverride,\n  value,\n  initialValue,\n  ...props\n}) => {\n  const onValueChange = React.useCallback(\n    (itemValue: string, itemIndex: number) => {\n      if (placeholder && itemIndex === 0) {\n        return;\n      }\n      onValueChangeOverride && onValueChangeOverride(itemValue, itemIndex);\n    },\n    [placeholder, onValueChangeOverride]\n  );\n\n  const normalizedOptions = normalizeOptions(options);\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      const index = normalizedOptions.findIndex(\n        (opt) => opt.value === initialValue\n      );\n\n      if (index == null) {\n        return;\n      }\n\n      onValueChange(initialValue, index);\n    }\n  }, [initialValue, previousInitialValue, normalizedOptions, onValueChange]);\n\n  const pickerOptions = placeholder\n    ? [{ value: placeholder, label: placeholder }, ...normalizedOptions]\n    : normalizedOptions;\n\n  return (\n    <PickerComponent\n      {...props}\n      selectedValue={value}\n      placeholder={placeholder}\n      options={pickerOptions}\n      onValueChange={onValueChange}\n    />\n  );\n};\n\nexport default withTheme(Picker);\n\nconst SEED_DATA_PROPS = {\n  label: {\n    group: GROUPS.data,\n    label: \"Label\",\n    description: \"The label to be displayed on the picker\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: null,\n    editable: true,\n    required: true,\n  },\n  placeholder: {\n    group: GROUPS.basic,\n    label: \"Placeholder\",\n    description: \"The placeholder text of the picker\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"Select an option\",\n    editable: true,\n    required: false,\n  },\n  placeholderTextColor: {\n    group: GROUPS.basic,\n    label: \"Placeholder Text Color\",\n    description: \"The color of the placeholder text.\",\n    editable: true,\n    required: false,\n    defaultValue: null,\n    formType: FORM_TYPES.color,\n    propType: PROP_TYPES.STRING,\n  },\n  assistiveText: {\n    group: GROUPS.basic,\n    label: \"Assistive text\",\n    description: \"Helper text to display below the picker\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  options: {\n    group: GROUPS.data,\n    label: \"Options\",\n    description:\n      \"Array of picker options. An array of objects containing a label and value.\",\n    editable: true,\n    required: false,\n    formType: FORM_TYPES.array,\n    propType: PROP_TYPES.OBJECT,\n    options: [],\n    defaultValue: null,\n  },\n  disabled: {\n    group: GROUPS.basic,\n    label: \"Disabled\",\n    description:\n      \"Whether the picker should be disabled. Will prevent selection and show a greyed out state.\",\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n    defaultValue: false,\n    editable: true,\n    required: false,\n  },\n  error: {\n    group: GROUPS.data,\n    label: \"Error\",\n    description: \"Whether the picker should display the error state\",\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n    defaultValue: false,\n    editable: true,\n    required: false,\n  },\n  leftIconName: {\n    group: GROUPS.basic,\n    label: \"Left icon name\",\n    description: \"The icon to display on the left\",\n    formType: FORM_TYPES.icon,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  leftIconMode: {\n    group: GROUPS.basic,\n    label: \"Left icon mode\",\n    description:\n      \"The mode of the icon to display on the left. 'inset' or 'outset'.\",\n    formType: FORM_TYPES.flatArray,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"inset\",\n    options: [\"inset\", \"outset\"],\n    editable: true,\n    required: true,\n  },\n  rightIconName: {\n    group: GROUPS.basic,\n    label: \"Right icon name\",\n    description: \"The icon to display on the right\",\n    formType: FORM_TYPES.icon,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  fieldName: {\n    ...FIELD_NAME,\n    defaultValue: \"pickerValue\",\n    handlerPropName: \"onValueChange\",\n  },\n};\n\nexport const SEED_DATA = [\n  {\n    name: \"Picker\",\n    tag: \"Picker\",\n    description: \"A component used to pick a value from a set of options\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url: \"{CLOUDINARY_URL}/Picker.png\",\n    supports_list_render: false,\n    props: {\n      ...SEED_DATA_PROPS,\n      type: {\n        label: \"Appearance\",\n        description: \"Type of Picker\",\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"solid\",\n        options: [\"solid\", \"underline\"],\n        editable: true,\n        required: true,\n        group: GROUPS.basic,\n      },\n    },\n    layout: {},\n  },\n  {\n    name: \"Picker - Underline\",\n    tag: \"Picker\",\n    description: \"A picker with an underline\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url: \"{CLOUDINARY_URL}/Picker.png\",\n    supports_list_render: false,\n    props: {\n      ...SEED_DATA_PROPS,\n      type: {\n        label: \"Type\",\n        description: \"Type\",\n        group: GROUPS.uncategorized,\n        formType: FORM_TYPES.string,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"underline\",\n        editable: false,\n        required: false,\n      },\n    },\n    layout: {},\n  },\n];\n"]}