{"version":3,"sources":["HeaderMedium.tsx"],"names":["React","withTheme","GROUPS","COMPONENT_TYPES","FORM_TYPES","PROP_TYPES","Header","HeaderMedium","Icon","title","buttonText","icon","onPress","style","theme","colors","typography","headline6","strong","SEED_DATA","name","tag","description","category","header","preview_image_url","supports_list_render","props","group","data","label","formType","string","propType","STRING","defaultValue","editable","required","basic","ASSET","action","layout"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nimport Header from \"./Header\";\nimport { StyleProp, ViewStyle } from \"react-native\";\n\ntype Props = {\n  title: string;\n  buttonText: string;\n  icon: string;\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & IconSlot;\n\nconst HeaderMedium: React.FC<Props> = ({\n  Icon,\n  title,\n  buttonText,\n  icon,\n  onPress = () => {},\n  style,\n  theme: { colors, typography },\n}) => {\n  return (\n    <Header\n      Icon={Icon}\n      titleTypeStyle={typography.headline6}\n      titleColor={colors.strong}\n      title={title}\n      buttonText={buttonText}\n      icon={icon}\n      onPress={onPress}\n      style={style}\n    />\n  );\n};\n\nexport default withTheme(HeaderMedium);\n\nexport const SEED_DATA = [\n  {\n    name: \"Header Medium\",\n    tag: \"HeaderMedium\",\n    description:\n      \"A medium header with an optional touchable right aligned text and icon.\",\n    category: COMPONENT_TYPES.header,\n    preview_image_url: \"{CLOUDINARY_URL}/Header_HeadlineMediumIconText.png\",\n    supports_list_render: false,\n    props: {\n      title: {\n        group: GROUPS.data,\n        label: \"Title\",\n        description: \"Text to display\",\n        formType: FORM_TYPES.string,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"Title\",\n        editable: true,\n        required: false,\n      },\n      buttonText: {\n        group: GROUPS.data,\n        label: \"Button text\",\n        description: \"Right aligned button text to display\",\n        formType: FORM_TYPES.string,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"See All\",\n        editable: true,\n        required: false,\n      },\n      icon: {\n        group: GROUPS.basic,\n        label: \"Icon\",\n        description: \"Name of icon to display\",\n        formType: FORM_TYPES.icon,\n        propType: PROP_TYPES.ASSET,\n        defaultValue: null,\n        editable: true,\n        required: false,\n      },\n      onPress: {\n        group: GROUPS.basic,\n        label: \"Action\",\n        description: \"Action to execute when button pressed\",\n        editable: true,\n        required: false,\n        formType: FORM_TYPES.action,\n        propType: PROP_TYPES.STRING,\n        defaultValue: null,\n      },\n    },\n    layout: {},\n  },\n];\n"]}