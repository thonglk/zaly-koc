{"version":3,"sources":["CardContainer.tsx"],"names":["React","View","Text","color","Image","Card","Elevation","withTheme","GROUPS","FORM_TYPES","PROP_TYPES","COMPONENT_TYPES","createElevationType","createNumColumnsType","Config","ICON_CONTAINER_SIZE","cardIconSize","ICON_CONTAINER_PADDING","CardContainer","Icon","icon","image","cardImageUrl","title","leftDescription","rightDescription","textCentered","aspectRatio","elevation","numColumns","theme","colors","roundness","typography","style","onPress","rest","textJustification","titleStyle","headline6","headline5","borderRadius","overflow","backgroundColor","surface","uri","padding","flexDirection","alignItems","justifyContent","strong","marginTop","body2","medium","subtitle2","light","cardIconElevation","position","top","right","width","height","alpha","cardIconBackgroundOpacity","rgb","string","SEED_DATA_PROPS","label","description","formType","propType","ASSET","defaultValue","editable","required","group","data","STRING","basic","NUMBER","boolean","BOOLEAN","SEED_DATA","name","tag","category","card","layout","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAGEC,IAHF,QAMO,cANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,mBALF,EAMEC,oBANF,QAOO,iBAPP;AAWA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,MAAMC,mBAAmB,GAAGD,MAAM,CAACE,YAAP,GAAsB,CAAlD;AACA,MAAMC,sBAAsB,GAAGH,MAAM,CAACE,YAAP,GAAsB,CAAtB,GAA0B,CAAzD;;AAiBA,MAAME,aAA8B,GAAG,CAAC;AACtCC,EAAAA,IADsC;AAEtCC,EAAAA,IAFsC;AAGtCC,EAAAA,KAAK,GAAGP,MAAM,CAACQ,YAHuB;AAItCC,EAAAA,KAJsC;AAKtCC,EAAAA,eALsC;AAMtCC,EAAAA,gBANsC;AAOtCC,EAAAA,YAPsC;AAQtCC,EAAAA,WAAW,GAAG,GARwB;AAStCC,EAAAA,SAAS,GAAG,CAT0B;AAUtCC,EAAAA,UAAU,GAAG,CAVyB;AAWtCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,GAX+B;AAYtCC,EAAAA,KAZsC;AAatCC,EAAAA,OAbsC;AActC,KAAGC;AAdmC,CAAD,KAejC;AACJ,MAAIC,iBAAJ;AAEA,MAAIC,UAAJ;;AAEA,MAAIZ,YAAY,IAAI,CAACD,gBAArB,EAAuC;AACrCY,IAAAA,iBAAiB,GAAG,QAApB;AACD,GAFD,MAEO;AACLA,IAAAA,iBAAiB,GAAG,eAApB;AACD;;AAED,UAAQR,UAAR;AACE,SAAK,CAAL;AACES,MAAAA,UAAU,GAAGL,UAAU,CAACM,SAAxB;AACA;;AACF,SAAK,CAAL;AACED,MAAAA,UAAU,GAAGL,UAAU,CAACO,SAAxB;AACA;AANJ;;AASA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,KAAb;AAAoB,IAAA,OAAO,EAAEC,OAA7B;AAAsC,IAAA,UAAU,EAAEN;AAAlD,KAAkEO,IAAlE,gBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAER,MAAAA,SAAF;AAAaa,MAAAA,YAAY,EAAET;AAA3B;AAAlB,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,YAAY,EAAET,SADT;AAELU,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,eAAe,EAAEZ,MAAM,CAACa;AAHnB;AADT,kBAOE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEjB,MAAAA;AAAF,KADT;AAEE,IAAA,MAAM,EAAE,OAAON,KAAP,KAAiB,QAAjB,GAA4B;AAAEwB,MAAAA,GAAG,EAAExB;AAAP,KAA5B,GAA6CA,KAFvD;AAGE,IAAA,UAAU,EAAC;AAHb,IAPF,eAYE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLyB,MAAAA,OAAO,EAAEjB,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuB;AAD3B;AADT,KAKGN,KAAK,gBACJ,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLwB,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAEZ;AAHX;AADT,kBAOE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACC,UAAD,EAAa;AAAEnC,MAAAA,KAAK,EAAE4B,MAAM,CAACmB;AAAhB,KAAb;AAFT,KAIG3B,KAJH,CAPF,CADI,GAeF,IApBN,EAqBGC,eAAe,gBACd,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLuB,MAAAA,aAAa,EAAE,KADV;AAELE,MAAAA,cAAc,EAAEZ,iBAFX;AAGLW,MAAAA,UAAU,EAAE,QAHP;AAILG,MAAAA,SAAS,EAAEtB,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuB,IAAI;AAJjC;AADT,kBAQE,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACI,UAAU,CAACmB,KAAZ,EAAmB;AAAEjD,MAAAA,KAAK,EAAE4B,MAAM,CAACsB;AAAhB,KAAnB;AAFT,KAIG7B,eAJH,CARF,EAcGC,gBAAgB,gBACf,oBAAC,IAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,KAAK,EAAE,CAACQ,UAAU,CAACqB,SAAZ,EAAuB;AAAEnD,MAAAA,KAAK,EAAE4B,MAAM,CAACwB;AAAhB,KAAvB;AAFT,KAIG9B,gBAJH,CADe,GAOb,IArBN,CADc,GAwBZ,IA7CN,CAZF,EA2DGL,IAAI,gBACH,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,SAAS,EAAEd,MAAM,CAAC0C,iBADb;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,GAAG,EAAE,EAHA;AAILC,MAAAA,KAAK,EAAE,EAJF;AAKLC,MAAAA,KAAK,EAAE7C,mBALF;AAML8C,MAAAA,MAAM,EAAE9C,mBANH;AAOL+B,MAAAA,OAAO,EAAE7B,sBAPJ;AAQLwB,MAAAA,YAAY,EAAE1B,mBART;AASL4B,MAAAA,eAAe,EAAExC,KAAK,CAAC4B,MAAM,CAACmB,MAAR,CAAL,CACdY,KADc,CACRhD,MAAM,CAACiD,yBADC,EAEdC,GAFc,GAGdC,MAHc;AATZ;AADT,kBAgBE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE7C,IADR;AAEE,IAAA,IAAI,EAAEN,MAAM,CAACE,YAFf;AAGE,IAAA,KAAK,EAAEe,MAAM,CAACa;AAHhB,IAhBF,CADG,GAuBD,IAlFN,CADF,CADF,CADF;AA0FD,CA7HD;;AA+HA,eAAerC,SAAS,CAACW,aAAD,CAAxB;AAEA,MAAMgD,eAAe,GAAG;AACtB7C,EAAAA,KAAK,EAAE;AACL8C,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,WAAW,EAAE,OAFR;AAGLC,IAAAA,QAAQ,EAAE5D,UAAU,CAACY,KAHhB;AAILiD,IAAAA,QAAQ,EAAE5D,UAAU,CAAC6D,KAJhB;AAKLC,IAAAA,YAAY,EAAE,IALT;AAMLC,IAAAA,QAAQ,EAAE,IANL;AAOLC,IAAAA,QAAQ,EAAE,IAPL;AAQLC,IAAAA,KAAK,EAAEnE,MAAM,CAACoE;AART,GADe;AAWtBrD,EAAAA,KAAK,EAAE;AACL4C,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,WAAW,EAAE,iBAFR;AAGLC,IAAAA,QAAQ,EAAE5D,UAAU,CAACwD,MAHhB;AAILK,IAAAA,QAAQ,EAAE5D,UAAU,CAACmE,MAJhB;AAKLL,IAAAA,YAAY,EAAE,4BALT;AAMLC,IAAAA,QAAQ,EAAE,IANL;AAOLC,IAAAA,QAAQ,EAAE,KAPL;AAQLC,IAAAA,KAAK,EAAEnE,MAAM,CAACoE;AART,GAXe;AAqBtBpD,EAAAA,eAAe,EAAE;AACf2C,IAAAA,KAAK,EAAE,kBADQ;AAEfC,IAAAA,WAAW,EAAE,6BAFE;AAGfC,IAAAA,QAAQ,EAAE5D,UAAU,CAACwD,MAHN;AAIfK,IAAAA,QAAQ,EAAE5D,UAAU,CAACmE,MAJN;AAKfL,IAAAA,YAAY,EAAE,WALC;AAMfC,IAAAA,QAAQ,EAAE,IANK;AAOfC,IAAAA,QAAQ,EAAE,KAPK;AAQfC,IAAAA,KAAK,EAAEnE,MAAM,CAACoE;AARC,GArBK;AA+BtBnD,EAAAA,gBAAgB,EAAE;AAChB0C,IAAAA,KAAK,EAAE,mBADS;AAEhBC,IAAAA,WAAW,EAAE,8BAFG;AAGhBC,IAAAA,QAAQ,EAAE5D,UAAU,CAACwD,MAHL;AAIhBK,IAAAA,QAAQ,EAAE5D,UAAU,CAACmE,MAJL;AAKhBL,IAAAA,YAAY,EAAE,MALE;AAMhBC,IAAAA,QAAQ,EAAE,IANM;AAOhBC,IAAAA,QAAQ,EAAE,KAPM;AAQhBC,IAAAA,KAAK,EAAEnE,MAAM,CAACoE;AARE,GA/BI;AAyCtBxD,EAAAA,IAAI,EAAE;AACJ+C,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,WAAW,EAAE,kCAFT;AAGJC,IAAAA,QAAQ,EAAE5D,UAAU,CAACW,IAHjB;AAIJkD,IAAAA,QAAQ,EAAE5D,UAAU,CAACmE;AAAO;AAJxB;AAKJL,IAAAA,YAAY,EAAE,IALV;AAMJC,IAAAA,QAAQ,EAAE,IANN;AAOJC,IAAAA,QAAQ,EAAE,KAPN;AAQJC,IAAAA,KAAK,EAAEnE,MAAM,CAACsE;AARV,GAzCgB;AAmDtBnD,EAAAA,WAAW,EAAE;AACXwC,IAAAA,KAAK,EAAE,cADI;AAEXC,IAAAA,WAAW,EAAE,2BAFF;AAGXC,IAAAA,QAAQ,EAAE5D,UAAU,CAACkB,WAHV;AAIX2C,IAAAA,QAAQ,EAAE5D,UAAU,CAACqE,MAJV;AAKXP,IAAAA,YAAY,EAAE,GALH;AAMXC,IAAAA,QAAQ,EAAE,IANC;AAOXC,IAAAA,QAAQ,EAAE,KAPC;AAQXC,IAAAA,KAAK,EAAEnE,MAAM,CAACsE;AARH,GAnDS;AA6DtBpD,EAAAA,YAAY,EAAE;AACZyC,IAAAA,KAAK,EAAE,eADK;AAEZC,IAAAA,WAAW,EAAE,4BAFD;AAGZC,IAAAA,QAAQ,EAAE5D,UAAU,CAACuE,OAHT;AAIZV,IAAAA,QAAQ,EAAE5D,UAAU,CAACuE,OAJT;AAKZT,IAAAA,YAAY,EAAE,KALF;AAMZC,IAAAA,QAAQ,EAAE,IANE;AAOZC,IAAAA,QAAQ,EAAE,KAPE;AAQZC,IAAAA,KAAK,EAAEnE,MAAM,CAACsE;AARF,GA7DQ;AAuEtBlD,EAAAA,SAAS,EAAEhB,mBAAmB,CAAC,CAAD;AAvER,CAAxB;AA0EA,OAAO,MAAMsE,SAAS,GAAG,CACvB;AACEC,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,GAAG,EAAE,eAFP;AAGEhB,EAAAA,WAAW,EACT,qFAJJ;AAKEiB,EAAAA,QAAQ,EAAE1E,eAAe,CAAC2E,IAL5B;AAMEC,EAAAA,MAAM,EAAE,IANV;AAOEC,EAAAA,KAAK,EAAE,EACL,GAAGtB,eADE;AAELrC,IAAAA,UAAU,EAAEhB,oBAAoB,CAAC;AAC/B2D,MAAAA,YAAY,EAAE;AADiB,KAAD;AAF3B;AAPT,CADuB,EAevB;AACEW,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,GAAG,EAAE,eAFP;AAGEhB,EAAAA,WAAW,EACT,kFAJJ;AAKEiB,EAAAA,QAAQ,EAAE1E,eAAe,CAAC2E,IAL5B;AAMEC,EAAAA,MAAM,EAAE,IANV;AAOEC,EAAAA,KAAK,EAAE,EACL,GAAGtB,eADE;AAELrC,IAAAA,UAAU,EAAEhB,oBAAoB,CAAC;AAC/B2D,MAAAA,YAAY,EAAE;AADiB,KAAD;AAF3B;AAPT,CAfuB,CAAlB","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  ImageSourcePropType,\n  Text,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport color from \"color\";\nimport Image from \"./Image\";\nimport Card from \"./DeprecatedCardWrapper\";\nimport Elevation from \"./Elevation\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  FORM_TYPES,\n  PROP_TYPES,\n  COMPONENT_TYPES,\n  createElevationType,\n  createNumColumnsType,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nimport Config from \"./Config\";\nimport { justificationType } from \"./Justification\";\n\nconst ICON_CONTAINER_SIZE = Config.cardIconSize * 2;\nconst ICON_CONTAINER_PADDING = Config.cardIconSize / 2 - 1;\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  leftDescription?: string;\n  rightDescription?: string;\n  textCentered: boolean;\n  icon?: string;\n  aspectRatio?: number;\n  elevation?: number;\n  numColumns?: number;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  onPress: () => void;\n} & IconSlot;\n\nconst CardContainer: React.FC<Props> = ({\n  Icon,\n  icon,\n  image = Config.cardImageUrl,\n  title,\n  leftDescription,\n  rightDescription,\n  textCentered,\n  aspectRatio = 1.5,\n  elevation = 2,\n  numColumns = 3,\n  theme: { colors, roundness, typography },\n  style,\n  onPress,\n  ...rest\n}) => {\n  let textJustification: justificationType;\n\n  let titleStyle;\n\n  if (textCentered && !rightDescription) {\n    textJustification = \"center\";\n  } else {\n    textJustification = \"space-between\";\n  }\n\n  switch (numColumns) {\n    case 2:\n      titleStyle = typography.headline6;\n      break;\n    case 3:\n      titleStyle = typography.headline5;\n      break;\n  }\n\n  return (\n    <Card style={style} onPress={onPress} numColumns={numColumns} {...rest}>\n      <Elevation style={{ elevation, borderRadius: roundness }}>\n        <View\n          style={{\n            borderRadius: roundness,\n            overflow: \"hidden\",\n            backgroundColor: colors.surface,\n          }}\n        >\n          <Image\n            style={{ aspectRatio }}\n            source={typeof image === \"string\" ? { uri: image } : image}\n            resizeMode=\"cover\"\n          />\n          <View\n            style={{\n              padding: numColumns === 1 ? 8 : 16,\n            }}\n          >\n            {title ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: textJustification,\n                }}\n              >\n                <Text\n                  numberOfLines={1}\n                  style={[titleStyle, { color: colors.strong }]}\n                >\n                  {title}\n                </Text>\n              </View>\n            ) : null}\n            {leftDescription ? (\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: textJustification,\n                  alignItems: \"center\",\n                  marginTop: numColumns === 3 ? 4 : 4 / 2,\n                }}\n              >\n                <Text\n                  numberOfLines={1}\n                  style={[typography.body2, { color: colors.medium }]}\n                >\n                  {leftDescription}\n                </Text>\n                {rightDescription ? (\n                  <Text\n                    numberOfLines={1}\n                    style={[typography.subtitle2, { color: colors.light }]}\n                  >\n                    {rightDescription}\n                  </Text>\n                ) : null}\n              </View>\n            ) : null}\n          </View>\n          {icon ? (\n            <Elevation\n              style={{\n                elevation: Config.cardIconElevation,\n                position: \"absolute\",\n                top: 12,\n                right: 12,\n                width: ICON_CONTAINER_SIZE,\n                height: ICON_CONTAINER_SIZE,\n                padding: ICON_CONTAINER_PADDING,\n                borderRadius: ICON_CONTAINER_SIZE,\n                backgroundColor: color(colors.strong)\n                  .alpha(Config.cardIconBackgroundOpacity)\n                  .rgb()\n                  .string(),\n              }}\n            >\n              <Icon\n                name={icon}\n                size={Config.cardIconSize}\n                color={colors.surface}\n              />\n            </Elevation>\n          ) : null}\n        </View>\n      </Elevation>\n    </Card>\n  );\n};\n\nexport default withTheme(CardContainer);\n\nconst SEED_DATA_PROPS = {\n  image: {\n    label: \"Image\",\n    description: \"Image\",\n    formType: FORM_TYPES.image,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: true,\n    group: GROUPS.data,\n  },\n  title: {\n    label: \"Title\",\n    description: \"Text to display\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"Beautiful West Coast Villa\",\n    editable: true,\n    required: false,\n    group: GROUPS.data,\n  },\n  leftDescription: {\n    label: \"Left description\",\n    description: \"Text to display on the left\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"San Diego\",\n    editable: true,\n    required: false,\n    group: GROUPS.data,\n  },\n  rightDescription: {\n    label: \"Right description\",\n    description: \"Text to display on the right\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"$100\",\n    editable: true,\n    required: false,\n    group: GROUPS.data,\n  },\n  icon: {\n    label: \"Icon\",\n    description: \"Icon to display on the top right\",\n    formType: FORM_TYPES.icon,\n    propType: PROP_TYPES.STRING /* OR ASSET TODO TEST ME */,\n    defaultValue: null,\n    editable: true,\n    required: false,\n    group: GROUPS.basic,\n  },\n  aspectRatio: {\n    label: \"Aspect ratio\",\n    description: \"Aspect ratio of the image\",\n    formType: FORM_TYPES.aspectRatio,\n    propType: PROP_TYPES.NUMBER,\n    defaultValue: 1.5,\n    editable: true,\n    required: false,\n    group: GROUPS.basic,\n  },\n  textCentered: {\n    label: \"Centered Text\",\n    description: \"Whether to center the text\",\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n    defaultValue: false,\n    editable: true,\n    required: false,\n    group: GROUPS.basic,\n  },\n  elevation: createElevationType(2),\n};\n\nexport const SEED_DATA = [\n  {\n    name: \"Medium Card\",\n    tag: \"CardContainer\",\n    description:\n      \"An elevated card with a title and description, that takes up half of its container.\",\n    category: COMPONENT_TYPES.card,\n    layout: null,\n    props: {\n      ...SEED_DATA_PROPS,\n      numColumns: createNumColumnsType({\n        defaultValue: 2,\n      }),\n    },\n  },\n  {\n    name: \"Large Card\",\n    tag: \"CardContainer\",\n    description:\n      \"An elevated card with a title and description, that takes up its full container.\",\n    category: COMPONENT_TYPES.card,\n    layout: null,\n    props: {\n      ...SEED_DATA_PROPS,\n      numColumns: createNumColumnsType({\n        defaultValue: 3,\n      }),\n    },\n  },\n];\n"]}