{"version":3,"sources":["Stepper.tsx"],"names":["React","View","Text","withTheme","COMPONENT_TYPES","createIconSizeProp","createColorProp","createFieldNameProp","IconButton","usePrevious","Stepper","Icon","value","style","onChange","initialValue","theme","colors","typography","roundness","iconSize","iconColor","strong","borderRadius","typeStyle","stateValue","setStateValue","useState","previousInitialValue","useEffect","handleMinus","handlePlus","flexDirection","body1","textAlign","alignSelf","color","medium","marginHorizontal","SEED_DATA","name","tag","description","category","input","layout","props","fieldName","defaultValue","handlerPropName","valuePropName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA4D,cAA5D;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,mBAJF,QAKO,iBALP;AASA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,UAA5B;;AAcA,MAAMC,OAAwB,GAAG,CAAC;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,KAAK,GAAG,CAFwB;AAGhCC,EAAAA,KAHgC;AAIhCC,EAAAA,QAJgC;AAKhCC,EAAAA,YALgC;AAMhCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,GANyB;AAOhCC,EAAAA,QAAQ,GAAG,EAPqB;AAQhCC,EAAAA,SAAS,GAAGJ,MAAM,CAACK,MARa;AAShCC,EAAAA,YAAY,GAAGJ,SATiB;AAUhCK,EAAAA;AAVgC,CAAD,KAW3B;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,KAAK,CAAC2B,QAAN,CAAef,KAAf,CAApC;AAEA,QAAMgB,oBAAoB,GAAGnB,WAAW,CAACM,YAAD,CAAxC;AACAf,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AACpB,QAAId,YAAY,KAAKa,oBAArB,EAA2C;AACzCF,MAAAA,aAAa,CAACX,YAAD,CAAb;AACAD,MAAAA,QAAQ,IAAIA,QAAQ,CAACC,YAAD,CAApB;AACD;AACF,GALD,EAKG,CAACA,YAAD,EAAea,oBAAf,EAAqCd,QAArC,EAA+CY,aAA/C,CALH;;AAOA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIlB,KAAK,IAAIA,KAAK,KAAK,CAAvB,EAA0B;AACxBE,MAAAA,QAAQ,IAAIA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAApB;AACD,KAFD,MAEO;AACLc,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND;;AAQA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAInB,KAAK,IAAIA,KAAK,KAAK,CAAvB,EAA0B;AACxBE,MAAAA,QAAQ,IAAIA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAApB;AACD,KAFD,MAEO;AACLc,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACL;AAAEO,MAAAA,aAAa,EAAE;AAAjB,KADK,EAELnB,KAFK,EAGLU,YAAY,GAAG;AAAEA,MAAAA;AAAF,KAAH,GAAsB,EAH7B;AADT,kBAOE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,IAAI,EAAC,sBAFP;AAGE,IAAA,OAAO,EAAEmB,WAHX;AAIE,IAAA,IAAI,EAAEV,QAJR;AAKE,IAAA,KAAK,EAAEC,SALT;AAME,IAAA,QAAQ,EAAET,KAAK,GAAGA,KAAK,KAAK,CAAb,GAAiBa,UAAU,KAAK;AANjD,IAPF,eAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLP,UAAU,CAACe,KADN,EAEL;AACEC,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,KAAK,EAAEnB,MAAM,CAACoB,MAHhB;AAIEC,MAAAA,gBAAgB,EAAE;AAJpB,KAFK,EAQLd,SARK;AADT,KAYGZ,KAAK,IAAIa,UAZZ,CAfF,eA6BE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEd,IADR;AAEE,IAAA,IAAI,EAAC,mBAFP;AAGE,IAAA,OAAO,EAAEoB,UAHX;AAIE,IAAA,IAAI,EAAEX,QAJR;AAKE,IAAA,KAAK,EAAEC;AALT,IA7BF,CADF;AAuCD,CA7ED;;AA+EA,eAAelB,SAAS,CAACO,OAAD,CAAxB;AAEA,OAAO,MAAM6B,SAAS,GAAG,CACvB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,GAAG,EAAE,SAFP;AAGEC,EAAAA,WAAW,EAAE,uDAHf;AAIEC,EAAAA,QAAQ,EAAEvC,eAAe,CAACwC,KAJ5B;AAKEC,EAAAA,MAAM,EAAE,EALV;AAMEC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAExC,mBAAmB,CAAC;AAC7ByC,MAAAA,YAAY,EAAE,cADe;AAE7BC,MAAAA,eAAe,EAAE,UAFY;AAG7BC,MAAAA,aAAa,EAAE;AAHc,KAAD,CADzB;AAML9B,IAAAA,QAAQ,EAAEf,kBAAkB,CAAC;AAAE2C,MAAAA,YAAY,EAAE;AAAhB,KAAD,CANvB;AAOL3B,IAAAA,SAAS,EAAEf,eAAe,CAAC;AAAE0C,MAAAA,YAAY,EAAE;AAAhB,KAAD;AAPrB;AANT,CADuB,CAAlB","sourcesContent":["import * as React from \"react\";\nimport { View, Text, StyleProp, ViewStyle, TextStyle } from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport {\n  COMPONENT_TYPES,\n  createIconSizeProp,\n  createColorProp,\n  createFieldNameProp,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nimport IconButton from \"./IconButton\";\nimport { usePrevious } from \"../hooks\";\n\ntype Props = {\n  value?: number;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  onChange?: (value: number) => void;\n  initialValue?: number;\n  iconSize?: number;\n  iconColor?: string;\n  borderRadius?: number;\n  typeStyle?: StyleProp<TextStyle>;\n} & IconSlot;\n\nconst Stepper: React.FC<Props> = ({\n  Icon,\n  value = 0,\n  style,\n  onChange,\n  initialValue,\n  theme: { colors, typography, roundness },\n  iconSize = 24,\n  iconColor = colors.strong,\n  borderRadius = roundness,\n  typeStyle,\n}) => {\n  const [stateValue, setStateValue] = React.useState(value);\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      setStateValue(initialValue);\n      onChange && onChange(initialValue);\n    }\n  }, [initialValue, previousInitialValue, onChange, setStateValue]);\n\n  const handleMinus = () => {\n    if (value || value === 0) {\n      onChange && onChange(value - 1);\n    } else {\n      setStateValue(stateValue - 1);\n    }\n  };\n\n  const handlePlus = () => {\n    if (value || value === 0) {\n      onChange && onChange(value + 1);\n    } else {\n      setStateValue(stateValue + 1);\n    }\n  };\n\n  return (\n    <View\n      style={[\n        { flexDirection: \"row\" },\n        style,\n        borderRadius ? { borderRadius } : {},\n      ]}\n    >\n      <IconButton\n        Icon={Icon}\n        icon=\"MaterialIcons/remove\"\n        onPress={handleMinus}\n        size={iconSize}\n        color={iconColor}\n        disabled={value ? value === 0 : stateValue === 0}\n      />\n      <Text\n        style={[\n          typography.body1,\n          {\n            textAlign: \"center\",\n            alignSelf: \"center\",\n            color: colors.medium,\n            marginHorizontal: 8,\n          },\n          typeStyle,\n        ]}\n      >\n        {value || stateValue}\n      </Text>\n      <IconButton\n        Icon={Icon}\n        icon=\"MaterialIcons/add\"\n        onPress={handlePlus}\n        size={iconSize}\n        color={iconColor}\n      />\n    </View>\n  );\n};\n\nexport default withTheme(Stepper);\n\nexport const SEED_DATA = [\n  {\n    name: \"Stepper\",\n    tag: \"Stepper\",\n    description: \"A component used to control the quantity of something\",\n    category: COMPONENT_TYPES.input,\n    layout: {},\n    props: {\n      fieldName: createFieldNameProp({\n        defaultValue: \"stepperValue\",\n        handlerPropName: \"onChange\",\n        valuePropName: \"value\",\n      }),\n      iconSize: createIconSizeProp({ defaultValue: 24 }),\n      iconColor: createColorProp({ defaultValue: \"strong\" }),\n    },\n  },\n];\n"]}