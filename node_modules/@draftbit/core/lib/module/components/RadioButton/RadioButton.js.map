{"version":3,"sources":["RadioButton.tsx"],"names":["React","Config","IconButton","useRadioButtonGroupContext","GROUPS","COMPONENT_TYPES","createBoolProp","createColorProp","createNumberProp","createIconProp","createTextProp","RadioButton","Icon","disabled","color","value","selected","unselectedColor","onPress","size","radioButtonSize","selectedIcon","unselectedIcon","style","rest","contextValue","onValueChange","handlePress","isSelected","SEED_DATA","name","tag","category","input","props","label","description","defaultValue","required","group","basic","min","max","step","precision"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { StyleProp, ViewStyle } from \"react-native\";\n\nimport Config from \"../Config\";\nimport IconButton from \"../IconButton\";\nimport { useRadioButtonGroupContext } from \"./context\";\n\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  createBoolProp,\n  createColorProp,\n  createNumberProp,\n  createIconProp,\n  createTextProp,\n} from \"@draftbit/types\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\n\nexport type RadioButtonProps = {\n  selected?: boolean;\n  disabled?: boolean;\n  color?: string;\n  value?: string;\n  unselectedColor?: string;\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  size?: number;\n  selectedIcon?: string;\n  unselectedIcon?: string;\n} & IconSlot;\n\nconst RadioButton: React.FC<RadioButtonProps> = ({\n  Icon,\n  disabled = false,\n  color,\n  value,\n  selected,\n  unselectedColor,\n  onPress = () => {},\n  size = Config.radioButtonSize,\n  selectedIcon = \"MaterialIcons/radio-button-checked\",\n  unselectedIcon = \"MaterialIcons/radio-button-unchecked\",\n  style,\n  ...rest\n}) => {\n  const { value: contextValue, onValueChange } = useRadioButtonGroupContext();\n\n  const handlePress = () => {\n    onPress && onPress();\n\n    if (onValueChange && value) {\n      onValueChange(value);\n    }\n  };\n\n  const isSelected =\n    selected || (contextValue != null && contextValue === value);\n\n  return (\n    <IconButton\n      Icon={Icon}\n      icon={isSelected ? selectedIcon : unselectedIcon}\n      color={isSelected ? color : unselectedColor}\n      disabled={disabled}\n      onPress={handlePress}\n      size={size}\n      style={style}\n      {...rest}\n    />\n  );\n};\n\nexport default RadioButton;\n\nexport const SEED_DATA = {\n  name: \"Radio Button\",\n  tag: \"RadioButton\",\n  category: COMPONENT_TYPES.input,\n  props: {\n    value: createTextProp({\n      label: \"Value\",\n      description: \"Value of the radio button\",\n      defaultValue: null,\n      required: true,\n    }),\n    color: createColorProp({\n      group: GROUPS.basic,\n      description: \"Color for the button\",\n      defaultValue: \"primary\",\n    }),\n    unselectedColor: createColorProp({\n      group: GROUPS.basic,\n      label: \"Unselected Color\",\n      description: \"Unselected Color for the button\",\n      defaultValue: \"primary\",\n    }),\n    disabled: createBoolProp({\n      label: \"Disabled\",\n      description: \"Whether radio button is disabled\",\n    }),\n    size: createNumberProp({\n      group: GROUPS.basic,\n      label: \"Size\",\n      description: \"Specifies the size of the button\",\n      defaultValue: 24,\n      min: 16,\n      max: 128,\n      step: 1,\n      precision: 0,\n    }),\n    selectedIcon: createIconProp({\n      label: \"Selected Icon\",\n      description: \"Icon to show when the radio button is selected\",\n      defaultValue: \"MaterialIcons/radio-button-checked\",\n    }),\n    unselectedIcon: createIconProp({\n      label: \"Unselected Icon\",\n      description: \"Icon to show when the radio button is unselected\",\n      defaultValue: \"MaterialIcons/radio-button-unchecked\",\n    }),\n  },\n};\n"]}