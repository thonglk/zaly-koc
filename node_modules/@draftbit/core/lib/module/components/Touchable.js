function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from "react";
import { Pressable } from "react-native";
import { COMPONENT_TYPES, createActionProp } from "@draftbit/types";
export default function Touchable({
  children,
  disabled,
  onPress,
  style,
  ...props
}) {
  return /*#__PURE__*/React.createElement(Pressable, _extends({
    onPress: onPress,
    disabled: disabled,
    hitSlop: 8,
    style: ({
      pressed
    }) => {
      return [{
        opacity: pressed || disabled ? 0.75 : 1
      }, style];
    }
  }, props), children);
}
export const SEED_DATA = {
  name: "Touchable",
  tag: "Touchable",
  description: "Simple button with no styles",
  category: COMPONENT_TYPES.button,
  layout: {},
  props: {
    onPress: createActionProp()
  }
};
//# sourceMappingURL=Touchable.js.map