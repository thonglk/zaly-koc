{"version":3,"sources":["Card.tsx"],"names":["React","StyleSheet","View","Pressable","Image","Surface","Title","Subtitle","Caption","withTheme","Config","COMPONENT_TYPES","createElevationType","createTextProp","createImageProp","createIconProp","createAspectRatioProp","createActionProp","createStaticBoolProp","createTextStyle","ICON_SIZE","cardIconSize","ICON_CONTAINER_SIZE","ICON_CONTAINER_PADDING","ICON_ELEVATION","cardIconElevation","TopRightCircleIcon","Icon","icon","theme","onPress","justifyContent","alignItems","elevation","position","top","right","width","height","padding","borderRadius","backgroundColor","pressed","opacity","colors","surface","Card","image","cardImageUrl","title","subtitle","description","textCentered","aspectRatio","style","onPressIcon","titleStyle","subtitleStyle","descriptionStyle","children","bgColor","styles","flatten","innerPadding","uri","marginTop","SEED_DATA","name","tag","category","card","props","handlerPropName","label","defaultValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  ImageSourcePropType,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  Pressable,\n} from \"react-native\";\nimport Image from \"./Image\";\nimport Surface from \"./Surface\";\nimport { Title, Subtitle, Caption } from \"./Typography\";\n\nimport { withTheme } from \"../theming\";\nimport Config from \"./Config\";\n\nimport {\n  COMPONENT_TYPES,\n  createElevationType,\n  createTextProp,\n  createImageProp,\n  createIconProp,\n  createAspectRatioProp,\n  createActionProp,\n  createStaticBoolProp,\n  createTextStyle,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\nconst ICON_SIZE = Config.cardIconSize;\nconst ICON_CONTAINER_SIZE = Config.cardIconSize * 2;\nconst ICON_CONTAINER_PADDING = Config.cardIconSize / 2 - 1;\nconst ICON_ELEVATION = Config.cardIconElevation;\n\nexport const TopRightCircleIcon = withTheme(\n  ({\n    Icon,\n    icon,\n    theme,\n    onPress,\n  }: {\n    icon: string;\n    theme: Theme;\n    onPress?: () => void;\n  } & IconSlot) => {\n    return (\n      <Surface\n        style={{\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          elevation: ICON_ELEVATION,\n          position: \"absolute\",\n          top: 12,\n          right: 12,\n          width: ICON_CONTAINER_SIZE,\n          height: ICON_CONTAINER_SIZE,\n          padding: ICON_CONTAINER_PADDING,\n          borderRadius: ICON_CONTAINER_SIZE,\n          backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        <Pressable\n          disabled={!onPress}\n          onPress={onPress}\n          style={({ pressed }) => {\n            return [\n              {\n                opacity: pressed ? 0.8 : 1,\n              },\n            ];\n          }}\n        >\n          <Icon name={icon} size={ICON_SIZE} color={theme.colors.surface} />\n        </Pressable>\n      </Surface>\n    );\n  }\n);\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  textCentered: boolean;\n  icon?: string;\n  aspectRatio?: number;\n  elevation?: number;\n  numColumns?: number;\n  theme: Theme;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitleStyle?: StyleProp<TextStyle>;\n  descriptionStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n  onPress?: () => void;\n  onPressIcon?: () => void;\n  children?: React.ReactNode;\n} & IconSlot;\n\nconst Card: React.FC<Props> = ({\n  Icon,\n  image = Config.cardImageUrl,\n  title,\n  subtitle,\n  description,\n  textCentered,\n  icon,\n  aspectRatio = 1.5,\n  elevation = 2,\n  style,\n  onPress,\n  onPressIcon,\n  titleStyle,\n  subtitleStyle,\n  descriptionStyle,\n  theme,\n  children,\n}) => {\n  const {\n    backgroundColor: bgColor,\n    padding,\n    ...styles\n  } = StyleSheet.flatten(style || {});\n\n  const backgroundColor = bgColor ? bgColor : theme.colors.surface;\n  const innerPadding = padding ? padding : 12;\n\n  return (\n    <Surface style={[{ elevation, backgroundColor }, styles]}>\n      <Pressable\n        disabled={!onPress}\n        onPress={onPress}\n        style={({ pressed }) => {\n          return [\n            {\n              opacity: pressed ? 0.8 : 1,\n            },\n          ];\n        }}\n      >\n        <Image\n          style={{ aspectRatio }}\n          source={typeof image === \"string\" ? { uri: image } : image}\n          resizeMode=\"cover\"\n        />\n        <View style={{ padding: innerPadding }}>\n          <View style={{ alignItems: textCentered ? \"center\" : \"flex-start\" }}>\n            {title || (title && title !== \"\") ? (\n              <Title text={title} style={titleStyle} />\n            ) : null}\n            {subtitle || (subtitle && subtitle !== \"\") ? (\n              <Subtitle text={subtitle} style={subtitleStyle} />\n            ) : null}\n            {description || (description && description !== \"\") ? (\n              <View style={{ marginTop: 4 }}>\n                <Caption text={description} style={descriptionStyle} />\n              </View>\n            ) : null}\n            {children}\n          </View>\n        </View>\n        {icon ? (\n          <TopRightCircleIcon Icon={Icon} icon={icon} onPress={onPressIcon} />\n        ) : null}\n      </Pressable>\n    </Surface>\n  );\n};\n\nexport default withTheme(Card);\n\nexport const SEED_DATA = {\n  name: \"Card\",\n  tag: \"Card\",\n  description: \"A card you can customize however you'd like\",\n  category: COMPONENT_TYPES.card,\n  props: {\n    elevation: createElevationType(3),\n    image: createImageProp(),\n    onPress: createActionProp(),\n    onPressIcon: createActionProp({\n      handlerPropName: \"onPressIcon\",\n    }),\n    title: createTextProp({\n      label: \"Title\",\n      description: \"Large title text\",\n      // defaultValue: \"Title\",\n      defaultValue: null,\n    }),\n    titleStyle: createTextStyle({\n      label: \"Title Style\",\n    }),\n    subtitle: createTextProp({\n      label: \"Subtitle\",\n      description: \"Text underneath the title\",\n      defaultValue: null,\n      // defaultValue: \"Edit me in the props panel on the right\",\n    }),\n    subtitleStyle: createTextStyle({\n      label: \"Subtitle Style\",\n    }),\n    description: createTextProp({\n      label: \"Description\",\n      description: \"Smallest text underneath subtitle\",\n      // defaultValue:\n      // \"This bottom text is optional, but shows up to make your life a little easier!\",\n      defaultValue: null,\n    }),\n    descriptionStyle: createTextStyle({\n      label: \"Description Style\",\n    }),\n    icon: createIconProp(),\n    aspectRatio: createAspectRatioProp({\n      defaultValue: 1.5,\n    }),\n    textCentered: createStaticBoolProp({\n      label: \"Centered Text\",\n      description: \"Places your title and subtitle in the center\",\n    }),\n  },\n};\n"]}