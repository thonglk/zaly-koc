{"version":3,"sources":["CircleImage.tsx"],"names":["React","Image","Config","GROUPS","COMPONENT_TYPES","FORM_TYPES","PROP_TYPES","createImageProp","CircleImage","source","placeholderImageURL","size","style","props","borderRadius","width","height","uri","SEED_DATA","name","tag","description","category","media","group","basic","label","editable","required","formType","number","propType","NUMBER","min","max","precision","step","defaultValue"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,KADF,QAKO,cALP;AAMA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SACEC,MADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,eALF,QAMO,iBANP;;AAcA,MAAMC,WAA4B,GAAG,CAAC;AACpCC,EAAAA,MAAM,GAAGP,MAAM,CAACQ,mBADoB;AAEpCC,EAAAA,IAAI,GAAG,EAF6B;AAGpCC,EAAAA,KAHoC;AAIpC,KAAGC;AAJiC,CAAD,KAK/B;AACJ,QAAMC,YAAY,GAAGH,IAAI,GAAG,CAA5B;AAEA,sBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE,CAAC;AAAEI,MAAAA,KAAK,EAAEJ,IAAT;AAAeK,MAAAA,MAAM,EAAEL,IAAvB;AAA6BG,MAAAA;AAA7B,KAAD,EAA8CF,KAA9C,CADT;AAEE,IAAA,MAAM,EAAE,OAAOH,MAAP,KAAkB,QAAlB,GAA6B;AAAEQ,MAAAA,GAAG,EAAER;AAAP,KAA7B,GAA+CA,MAFzD;AAGE,IAAA,UAAU,EAAC;AAHb,KAIMI,KAJN,EADF;AAQD,CAhBD;;AAkBA,eAAeL,WAAf;AAEA,OAAO,MAAMU,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,cADiB;AAEvBC,EAAAA,GAAG,EAAE,aAFkB;AAGvBC,EAAAA,WAAW,EAAE,gBAHU;AAIvBC,EAAAA,QAAQ,EAAElB,eAAe,CAACmB,KAJH;AAKvBV,EAAAA,KAAK,EAAE;AACLJ,IAAAA,MAAM,EAAEF,eAAe,EADlB;AAELI,IAAAA,IAAI,EAAE;AACJa,MAAAA,KAAK,EAAErB,MAAM,CAACsB,KADV;AAEJC,MAAAA,KAAK,EAAE,MAFH;AAGJL,MAAAA,WAAW,EAAE,2BAHT;AAIJM,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,QAAQ,EAAE,KALN;AAMJC,MAAAA,QAAQ,EAAExB,UAAU,CAACyB,MANjB;AAOJC,MAAAA,QAAQ,EAAEzB,UAAU,CAAC0B,MAPjB;AAQJC,MAAAA,GAAG,EAAE,CARD;AASJC,MAAAA,GAAG,EAAE,GATD;AAUJC,MAAAA,SAAS,EAAE,CAVP;AAWJC,MAAAA,IAAI,EAAE,CAXF;AAYJC,MAAAA,YAAY,EAAE;AAZV;AAFD;AALgB,CAAlB","sourcesContent":["import * as React from \"react\";\nimport {\n  Image,\n  ImageSourcePropType,\n  StyleProp,\n  ImageStyle,\n} from \"react-native\";\nimport Config from \"./Config\";\n\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  createImageProp,\n} from \"@draftbit/types\";\n\ninterface Props {\n  source?: string | ImageSourcePropType;\n  size?: number;\n  style?: StyleProp<ImageStyle>;\n}\n\nconst CircleImage: React.FC<Props> = ({\n  source = Config.placeholderImageURL,\n  size = 60,\n  style,\n  ...props\n}) => {\n  const borderRadius = size / 2;\n\n  return (\n    <Image\n      style={[{ width: size, height: size, borderRadius }, style]}\n      source={typeof source === \"string\" ? { uri: source } : source}\n      resizeMode=\"cover\"\n      {...props}\n    />\n  );\n};\n\nexport default CircleImage;\n\nexport const SEED_DATA = {\n  name: \"Circle Image\",\n  tag: \"CircleImage\",\n  description: \"A circle image\",\n  category: COMPONENT_TYPES.media,\n  props: {\n    source: createImageProp(),\n    size: {\n      group: GROUPS.basic,\n      label: \"Size\",\n      description: \"Size of your circle image\",\n      editable: true,\n      required: false,\n      formType: FORM_TYPES.number,\n      propType: PROP_TYPES.NUMBER,\n      min: 0,\n      max: 300,\n      precision: 0,\n      step: 1,\n      defaultValue: 60,\n    },\n  },\n};\n"]}