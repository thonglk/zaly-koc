{"version":3,"sources":["Header.tsx"],"names":["React","View","Text","StyleSheet","withTheme","Divider","Touchable","Config","Header","Icon","titleTypeStyle","titleColor","title","buttonText","dividerTopMargin","icon","onPress","style","theme","colors","typography","styles","container","topContainer","color","flex","alignSelf","marginLeft","buttonContainer","subtitle2","light","marginRight","headerIconSize","marginTop","create","flexDirection","justifyContent","alignItems"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,UAHF,QAOO,cAPP;AAQA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAiBA,MAAMC,MAAuB,GAAG,CAAC;AAC/BC,EAAAA,IAD+B;AAE/BC,EAAAA,cAF+B;AAG/BC,EAAAA,UAH+B;AAI/BC,EAAAA,KAJ+B;AAK/BC,EAAAA,UAL+B;AAM/BC,EAAAA,gBAN+B;AAO/BC,EAAAA,IAP+B;AAQ/BC,EAAAA,OAR+B;AAS/BC,EAAAA,KAT+B;AAU/BC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV;AAVwB,CAAD,KAW1B;AACJ,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBL,KAAnB;AAAb,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE;AAApB,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLb,cADK,EAEL;AACEc,MAAAA,KAAK,EAAEb,UADT;AAEEc,MAAAA,IAAI,EAAE;AAFR,KAFK,CADT;AAQE,IAAA,aAAa,EAAE;AARjB,KAUGb,KAVH,CADF,EAaGI,OAAO,iBACN,oBAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,UAAU,EAAE;AAAnC,KADT;AAEE,IAAA,OAAO,EAAEX;AAFX,kBAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACO;AAApB,kBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLR,UAAU,CAACS,SADN,EAEL;AACEL,MAAAA,KAAK,EAAEL,MAAM,CAACW,KADhB;AAEEC,MAAAA,WAAW,EAAE;AAFf,KAFK,CADT;AAQE,IAAA,aAAa,EAAE;AARjB,KAUGlB,UAVH,CADF,eAaE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEE,IADR;AAEE,IAAA,IAAI,EAAER,MAAM,CAACyB,cAFf;AAGE,IAAA,KAAK,EAAEb,MAAM,CAACW;AAHhB,IAbF,CAJF,CAdJ,CADF,eAyCE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAEnB,gBAAgB,IAAI;AAAjC;AAAhB,IAzCF,CADF;AA6CD,CAzDD;;AA2DA,MAAMO,MAAM,GAAGlB,UAAU,CAAC+B,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTI,IAAAA,SAAS,EAAE;AADF,GADoB;AAI/BH,EAAAA,YAAY,EAAE;AACZY,IAAAA,aAAa,EAAE,KADH;AAEZC,IAAAA,cAAc,EAAE,eAFJ;AAGZC,IAAAA,UAAU,EAAE;AAHA,GAJiB;AAS/BT,EAAAA,eAAe,EAAE;AACfO,IAAAA,aAAa,EAAE,KADA;AAEfC,IAAAA,cAAc,EAAE,QAFD;AAGfC,IAAAA,UAAU,EAAE;AAHG;AATc,CAAlB,CAAf;AAgBA,eAAejC,SAAS,CAACI,MAAD,CAAxB","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport Divider from \"./Divider\";\nimport Touchable from \"./Touchable\";\nimport Config from \"./Config\";\n\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\ntype Props = {\n  titleTypeStyle?: StyleProp<TextStyle>;\n  titleColor: string;\n  title: string;\n  buttonText: string;\n  dividerTopMargin?: number;\n  icon: string;\n  onPress: () => void;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & IconSlot;\n\nconst Header: React.FC<Props> = ({\n  Icon,\n  titleTypeStyle,\n  titleColor,\n  title,\n  buttonText,\n  dividerTopMargin,\n  icon,\n  onPress,\n  style,\n  theme: { colors, typography },\n}) => {\n  return (\n    <View style={[styles.container, style]}>\n      <View style={styles.topContainer}>\n        <Text\n          style={[\n            titleTypeStyle,\n            {\n              color: titleColor,\n              flex: 1,\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {title}\n        </Text>\n        {onPress && (\n          <Touchable\n            style={{ alignSelf: \"center\", marginLeft: 12 }}\n            onPress={onPress}\n          >\n            <View style={styles.buttonContainer}>\n              <Text\n                style={[\n                  typography.subtitle2,\n                  {\n                    color: colors.light,\n                    marginRight: 8,\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {buttonText}\n              </Text>\n              <Icon\n                name={icon}\n                size={Config.headerIconSize}\n                color={colors.light}\n              />\n            </View>\n          </Touchable>\n        )}\n      </View>\n      <Divider style={{ marginTop: dividerTopMargin || 16 }} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n\nexport default withTheme(Header);\n"]}