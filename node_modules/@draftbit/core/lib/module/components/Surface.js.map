{"version":3,"sources":["Surface.tsx"],"names":["React","Animated","StyleSheet","View","shadow","overlay","withTheme","COMPONENT_TYPES","createElevationType","Surface","elevation","style","theme","children","rest","styleElevation","borderRadius","radius","flatten","dark","isDarkTheme","mode","colors","roundness","ele","minHeight","backgroundColor","surface","overflow","SEED_DATA","name","tag","description","category","layout","props"],"mappings":";;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,QADF,EAEEC,UAFF,EAMEC,IANF,QAOO,cAPP;AAQA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,iBAArD;;AAQA,MAAMC,OAAwB,GAAG,CAAC;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA,KAFgC;AAGhCC,EAAAA,KAHgC;AAIhCC,EAAAA,QAJgC;AAKhC,KAAGC;AAL6B,CAAD,KAM3B;AACJ,QAAM;AAAEJ,IAAAA,SAAS,EAAEK,cAAc,GAAG,CAA9B;AAAiCC,IAAAA,YAAY,EAAEC;AAA/C,MACHf,UAAU,CAACgB,OAAX,CAAmBP,KAAnB,KAA6B,EADhC;AAEA,QAAM;AAAEQ,IAAAA,IAAI,EAAEC,WAAR;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAsCV,KAA5C;AACA,QAAMI,YAAY,GAAGC,MAAM,IAAIL,KAAK,CAACW,SAArC;AACA,QAAMC,GAAG,GAAGd,SAAS,IAAIK,cAAzB;AAEA,sBACE,oBAAC,QAAD,CAAU,IAAV,eACMD,IADN;AAEE,IAAA,KAAK,EAAE,CACL;AACEW,MAAAA,SAAS,EAAE,EADb;AAEET,MAAAA,YAFF;AAGEU,MAAAA,eAAe,EACbN,WAAW,IAAIC,IAAI,KAAK,UAAxB,GACIhB,OAAO,CAACmB,GAAD,EAAMF,MAAM,CAACK,OAAb,CADX,GAEIL,MAAM,CAACK;AANf,KADK,EASLjB,SAAS,GAAGN,MAAM,CAACM,SAAD,CAAT,GAAuB,IAT3B,EAULC,KAVK;AAFT,mBAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE,QAAZ;AAAsBZ,MAAAA;AAAtB;AAAb,KAAoDH,QAApD,CAfF,CADF;AAmBD,CAhCD;;AAkCA,eAAeP,SAAS,CAACG,OAAD,CAAxB;AAEA,OAAO,MAAMoB,SAAS,GAAG;AACvBC,EAAAA,IAAI,EAAE,SADiB;AAEvBC,EAAAA,GAAG,EAAE,SAFkB;AAGvBC,EAAAA,WAAW,EAAE,uBAHU;AAIvBC,EAAAA,QAAQ,EAAE1B,eAAe,CAAC2B,MAJH;AAKvBA,EAAAA,MAAM,EAAE,EALe;AAMvBC,EAAAA,KAAK,EAAE;AACLzB,IAAAA,SAAS,EAAEF,mBAAmB,CAAC,CAAD;AADzB;AANgB,CAAlB","sourcesContent":["/* Copied from https://github.com/callstack/react-native-paper/blob/main/src/components/Surface.tsx */\nimport * as React from \"react\";\nimport {\n  Animated,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  View,\n} from \"react-native\";\nimport shadow from \"../styles/shadow\";\nimport overlay from \"../styles/overlay\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport { COMPONENT_TYPES, createElevationType } from \"@draftbit/types\";\n\ntype Props = {\n  elevation?: number;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & ViewProps;\n\nconst Surface: React.FC<Props> = ({\n  elevation,\n  style,\n  theme,\n  children,\n  ...rest\n}) => {\n  const { elevation: styleElevation = 3, borderRadius: radius } =\n    (StyleSheet.flatten(style) || {}) as ViewStyle;\n  const { dark: isDarkTheme, mode, colors } = theme;\n  const borderRadius = radius || theme.roundness;\n  const ele = elevation || styleElevation;\n\n  return (\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          minHeight: 40,\n          borderRadius,\n          backgroundColor:\n            isDarkTheme && mode === \"adaptive\"\n              ? overlay(ele, colors.surface)\n              : colors.surface,\n        },\n        elevation ? shadow(elevation) : null,\n        style,\n      ]}\n    >\n      <View style={{ overflow: \"hidden\", borderRadius }}>{children}</View>\n    </Animated.View>\n  );\n};\n\nexport default withTheme(Surface);\n\nexport const SEED_DATA = {\n  name: \"Surface\",\n  tag: \"Surface\",\n  description: \"An elevated container\",\n  category: COMPONENT_TYPES.layout,\n  layout: {},\n  props: {\n    elevation: createElevationType(0),\n  },\n};\n"]}