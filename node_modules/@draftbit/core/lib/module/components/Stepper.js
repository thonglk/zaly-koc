import * as React from "react";
import { View, Text } from "react-native";
import { withTheme } from "../theming";
import { COMPONENT_TYPES, createIconSizeProp, createColorProp, createFieldNameProp } from "@draftbit/types";
import IconButton from "./IconButton";
import { usePrevious } from "../hooks";

const Stepper = ({
  Icon,
  value = 0,
  style,
  onChange,
  initialValue,
  theme: {
    colors,
    typography,
    roundness
  },
  iconSize = 24,
  iconColor = colors.strong,
  borderRadius = roundness,
  typeStyle
}) => {
  const [stateValue, setStateValue] = React.useState(value);
  const previousInitialValue = usePrevious(initialValue);
  React.useEffect(() => {
    if (initialValue !== previousInitialValue) {
      setStateValue(initialValue);
      onChange && onChange(initialValue);
    }
  }, [initialValue, previousInitialValue, onChange, setStateValue]);

  const handleMinus = () => {
    if (value || value === 0) {
      onChange && onChange(value - 1);
    } else {
      setStateValue(stateValue - 1);
    }
  };

  const handlePlus = () => {
    if (value || value === 0) {
      onChange && onChange(value + 1);
    } else {
      setStateValue(stateValue + 1);
    }
  };

  return /*#__PURE__*/React.createElement(View, {
    style: [{
      flexDirection: "row"
    }, style, borderRadius ? {
      borderRadius
    } : {}]
  }, /*#__PURE__*/React.createElement(IconButton, {
    Icon: Icon,
    icon: "MaterialIcons/remove",
    onPress: handleMinus,
    size: iconSize,
    color: iconColor,
    disabled: value ? value === 0 : stateValue === 0
  }), /*#__PURE__*/React.createElement(Text, {
    style: [typography.body1, {
      textAlign: "center",
      alignSelf: "center",
      color: colors.medium,
      marginHorizontal: 8
    }, typeStyle]
  }, value || stateValue), /*#__PURE__*/React.createElement(IconButton, {
    Icon: Icon,
    icon: "MaterialIcons/add",
    onPress: handlePlus,
    size: iconSize,
    color: iconColor
  }));
};

export default withTheme(Stepper);
export const SEED_DATA = [{
  name: "Stepper",
  tag: "Stepper",
  description: "A component used to control the quantity of something",
  category: COMPONENT_TYPES.input,
  layout: {},
  props: {
    fieldName: createFieldNameProp({
      defaultValue: "stepperValue",
      handlerPropName: "onChange",
      valuePropName: "value"
    }),
    iconSize: createIconSizeProp({
      defaultValue: 24
    }),
    iconColor: createColorProp({
      defaultValue: "strong"
    })
  }
}];
//# sourceMappingURL=Stepper.js.map