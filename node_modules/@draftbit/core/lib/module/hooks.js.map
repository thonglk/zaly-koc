{"version":3,"sources":["hooks.ts"],"names":["React","usePrevious","value","ref","useRef","useEffect","current"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAiC;AACtC;AACA;AACA,QAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,EAAZ,CAHsC,CAKtC;;AACAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBF,IAAAA,GAAG,CAACG,OAAJ,GAAcJ,KAAd;AACD,GAFD,EAEG,CAACA,KAAD,CAFH,EANsC,CAUtC;;AACA,SAAOC,GAAG,CAACG,OAAX;AACD","sourcesContent":["import React from \"react\";\n\nexport function usePrevious(value: any) {\n  // The ref object is a generic container whose current property is mutable\n  // and can hold any value, similar to an instance property on a class\n  const ref = React.useRef();\n\n  // Store current value in ref\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n"]}