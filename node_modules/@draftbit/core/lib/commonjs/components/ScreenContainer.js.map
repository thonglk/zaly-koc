{"version":3,"sources":["ScreenContainer.tsx"],"names":["ScrollView","children","style","flexGrow","ScreenContainer","hasSafeArea","scrollable","hasBottomSafeArea","hasTopSafeArea","theme","rest","backgroundColor","colors","background","edges","push","styles","container","StyleSheet","create","flex"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AAEA;;;;;;;;AAGA,SAASA,UAAT,CAAoB;AAClBC,EAAAA,QADkB;AAElBC,EAAAA;AAFkB,CAApB,EAMG;AACD,sBACE,oBAAC,uBAAD;AACE,IAAA,qBAAqB,EAAE,CACrB;AACEC,MAAAA,QAAQ,EAAE;AADZ,KADqB,EAIrBD,KAJqB;AADzB,KAQGD,QARH,CADF;AAYD;;AAYD,SAASG,eAAT,CAAyB;AACvBC,EAAAA,WAAW,GAAG,KADS;AAEvBC,EAAAA,UAAU,GAAG,KAFU;AAGvBC,EAAAA,iBAHuB;AAIvBC,EAAAA,cAJuB;AAKvBC,EAAAA,KALuB;AAMvBP,EAAAA,KANuB;AAOvBD,EAAAA,QAPuB;AAQvB,KAAGS;AARoB,CAAzB,EASU;AACR,QAAMC,eAAe,GAAGF,KAAK,CAACG,MAAN,CAAaC,UAArC;AAEA,QAAMC,KAAa,GAAG,CAAC,MAAD,EAAS,OAAT,CAAtB;;AACA,MAAIT,WAAW,IAAIG,cAAnB,EAAmC;AACjCM,IAAAA,KAAK,CAACC,IAAN,CAAW,KAAX;AACD;;AAED,MAAIV,WAAW,IAAIE,iBAAnB,EAAsC;AACpCO,IAAAA,KAAK,CAACC,IAAN,CAAW,QAAX;AACD;;AAED,sBACE,oBAAC,wCAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,KAAK,EAAE,CACLE,MAAM,CAACC,SADF,EAEL;AACEN,MAAAA;AADF,KAFK;AAFT,KAQMD,IARN,gBAUE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmB;AAAEN,MAAAA;AAAF,KAAnB,EAAwCT,KAAxC;AAAb,KACGI,UAAU,gBACT,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEJ;AAAnB,KAA2BD,QAA3B,CADS,GAGTA,QAJJ,CAVF,CADF;AAoBD;;AAED,MAAMe,MAAM,GAAGE,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf;;eAMe,wBAAUhB,eAAV,C","sourcesContent":["import * as React from \"react\";\nimport {\n  StyleSheet,\n  ScrollView as NativeScrollView,\n  StyleProp,\n  ViewStyle,\n  View,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport type { Edge } from \"react-native-safe-area-context\";\nimport { withTheme } from \"../theming\";\nimport type { Theme } from \"../styles/DefaultTheme\";\n\nfunction ScrollView({\n  children,\n  style,\n}: {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n}) {\n  return (\n    <NativeScrollView\n      contentContainerStyle={[\n        {\n          flexGrow: 1,\n        },\n        style,\n      ]}\n    >\n      {children}\n    </NativeScrollView>\n  );\n}\n\ntype Props = {\n  hasSafeArea: boolean;\n  scrollable: boolean;\n  hasBottomSafeArea?: boolean;\n  hasTopSafeArea?: boolean;\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n  children?: React.ReactNode;\n};\n\nfunction ScreenContainer({\n  hasSafeArea = false,\n  scrollable = false,\n  hasBottomSafeArea,\n  hasTopSafeArea,\n  theme,\n  style,\n  children,\n  ...rest\n}: Props) {\n  const backgroundColor = theme.colors.background;\n\n  const edges: Edge[] = [\"left\", \"right\"];\n  if (hasSafeArea || hasTopSafeArea) {\n    edges.push(\"top\");\n  }\n\n  if (hasSafeArea || hasBottomSafeArea) {\n    edges.push(\"bottom\");\n  }\n\n  return (\n    <SafeAreaView\n      edges={edges}\n      style={[\n        styles.container,\n        {\n          backgroundColor,\n        },\n      ]}\n      {...rest}\n    >\n      <View style={[styles.container, { backgroundColor }, style]}>\n        {scrollable ? (\n          <ScrollView style={style}>{children}</ScrollView>\n        ) : (\n          children\n        )}\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ScreenContainer);\n"]}