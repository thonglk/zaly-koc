{"version":3,"sources":["Divider.tsx"],"names":["Divider","style","color","height","theme","colors","rest","backgroundColor","divider","StyleSheet","hairlineWidth","SEED_DATA","name","tag","category","COMPONENT_TYPES","layout","description","preview_image_url","supports_list_render","props","group","GROUPS","basic","label","editable","required","defaultValue","formType","FORM_TYPES","propType","PROP_TYPES","THEME","number","NUMBER","min","max","step","precision"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAeA,MAAMA,OAAwB,GAAG,CAAC;AAChCC,EAAAA,KADgC;AAEhCC,EAAAA,KAFgC;AAGhCC,EAAAA,MAHgC;AAIhCC,EAAAA,KAAK,EAAE;AAAEC,IAAAA;AAAF,GAJyB;AAKhC,KAAGC;AAL6B,CAAD,KAM3B;AACJ,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,eAAe,EAAEL,KAAK,IAAIG,MAAM,CAACG;AAAnC,KADK,EAELP,KAFK,EAGL;AAAEE,MAAAA,MAAM,EAAEA,MAAM,IAAIM,wBAAWC;AAA/B,KAHK;AADT,KAMMJ,IANN,EADF;AAUD,CAjBD;;eAmBe,wBAAUN,OAAV,C;;;AAER,MAAMW,SAAS,GAAG,CACvB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,GAAG,EAAE,SAFP;AAGEC,EAAAA,QAAQ,EAAEC,uBAAgBC,MAH5B;AAIEC,EAAAA,WAAW,EAAE,0CAJf;AAKEC,EAAAA,iBAAiB,EAAE,8BALrB;AAMEC,EAAAA,oBAAoB,EAAE,KANxB;AAOEC,EAAAA,KAAK,EAAE;AACLlB,IAAAA,KAAK,EAAE;AACLmB,MAAAA,KAAK,EAAEC,cAAOC,KADT;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLP,MAAAA,WAAW,EAAE,0BAHR;AAILQ,MAAAA,QAAQ,EAAE,IAJL;AAKLC,MAAAA,QAAQ,EAAE,KALL;AAMLC,MAAAA,YAAY,EAAE,SANT;AAOLC,MAAAA,QAAQ,EAAEC,kBAAW3B,KAPhB;AAQL4B,MAAAA,QAAQ,EAAEC,kBAAWC;AARhB,KADF;AAWL7B,IAAAA,MAAM,EAAE;AACNkB,MAAAA,KAAK,EAAEC,cAAOC,KADR;AAENC,MAAAA,KAAK,EAAE,QAFD;AAGNP,MAAAA,WAAW,EACT,+FAJI;AAKNQ,MAAAA,QAAQ,EAAE,IALJ;AAMNC,MAAAA,QAAQ,EAAE,KANJ;AAONE,MAAAA,QAAQ,EAAEC,kBAAWI,MAPf;AAQNH,MAAAA,QAAQ,EAAEC,kBAAWG,MARf;AASNP,MAAAA,YAAY,EAAE,CATR;AAUNQ,MAAAA,GAAG,EAAE,CAVC;AAWNC,MAAAA,GAAG,EAAE,EAXC;AAYNC,MAAAA,IAAI,EAAE,CAZA;AAaNC,MAAAA,SAAS,EAAE;AAbL;AAXH,GAPT;AAkCEtB,EAAAA,MAAM,EAAE;AACNb,IAAAA,MAAM,EAAE;AADF;AAlCV,CADuB,CAAlB","sourcesContent":["import * as React from \"react\";\nimport { StyleSheet, View, StyleProp, ViewStyle } from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  FORM_TYPES,\n  PROP_TYPES,\n  COMPONENT_TYPES,\n} from \"@draftbit/types\";\nimport theme from \"../styles/DefaultTheme\";\n\ntype Props = {\n  style?: StyleProp<ViewStyle>;\n  color?: string;\n  height?: number;\n  theme: typeof theme;\n};\n\nconst Divider: React.FC<Props> = ({\n  style,\n  color,\n  height,\n  theme: { colors },\n  ...rest\n}) => {\n  return (\n    <View\n      style={[\n        { backgroundColor: color || colors.divider },\n        style,\n        { height: height || StyleSheet.hairlineWidth },\n      ]}\n      {...rest}\n    />\n  );\n};\n\nexport default withTheme(Divider);\n\nexport const SEED_DATA = [\n  {\n    name: \"Divider\",\n    tag: \"Divider\",\n    category: COMPONENT_TYPES.layout,\n    description: \"A horizontal line used to divide content\",\n    preview_image_url: \"{CLOUDINARY_URL}/Divider.png\",\n    supports_list_render: false,\n    props: {\n      color: {\n        group: GROUPS.basic,\n        label: \"Color\",\n        description: \"The color of the divider\",\n        editable: true,\n        required: false,\n        defaultValue: \"divider\",\n        formType: FORM_TYPES.color,\n        propType: PROP_TYPES.THEME,\n      },\n      height: {\n        group: GROUPS.basic,\n        label: \"Height\",\n        description:\n          \"The height (thickness) of the divider. If not provided, defaults to StyleSheet.hairlineWidth.\",\n        editable: true,\n        required: false,\n        formType: FORM_TYPES.number,\n        propType: PROP_TYPES.NUMBER,\n        defaultValue: 1,\n        min: 1,\n        max: 50,\n        step: 1,\n        precision: 0,\n      },\n    },\n    layout: {\n      height: 1,\n    },\n  },\n];\n"]}