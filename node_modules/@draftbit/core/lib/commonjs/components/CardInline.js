"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SEED_DATA = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _Typography = require("./Typography");

var _Image = _interopRequireDefault(require("./Image"));

var _Surface = _interopRequireDefault(require("./Surface"));

var _Config = _interopRequireDefault(require("./Config"));

var _theming = require("../theming");

var _types = require("@draftbit/types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-nocheck
const CardInline = ({
  image = _Config.default.cardImageUrl,
  title,
  subtitle,
  aspectRatio = 1.5,
  elevation = 2,
  style,
  titleStyle,
  subtitleStyle,
  onPress
}) => {
  const {
    alignItems,
    justifyContent,
    width,
    height
  } = _reactNative.StyleSheet.flatten(style || {});

  const imageStyles = width && height ? {
    width,
    height
  } : {
    aspectRatio
  };
  return /*#__PURE__*/_react.default.createElement(_Surface.default, {
    style: [{
      elevation
    }, style]
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Pressable, {
    disabled: !onPress,
    onPress: onPress,
    style: ({
      pressed
    }) => {
      return [{
        opacity: pressed ? 0.8 : 1
      }];
    }
  }, /*#__PURE__*/_react.default.createElement(_Image.default, {
    style: imageStyles,
    source: typeof image === "string" ? {
      uri: image
    } : image,
    resizeMode: "cover"
  }), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.overlay, {
      justifyContent,
      alignItems
    }]
  }, title ? /*#__PURE__*/_react.default.createElement(_Typography.Title, {
    style: [{
      color: "white"
    }, titleStyle],
    text: title
  }) : null, subtitle ? /*#__PURE__*/_react.default.createElement(_Typography.Subtitle, {
    style: [{
      color: "rgba(255, 255, 255, 0.7)"
    }, subtitleStyle],
    text: subtitle
  }) : null)));
};

const styles = _reactNative.StyleSheet.create({
  overlay: {
    position: "absolute",
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    padding: 16,
    backgroundColor: "rgba(0, 0, 0, 0.2)"
  }
});

var _default = (0, _theming.withTheme)(CardInline);

exports.default = _default;
const SEED_DATA = {
  name: "Inline Card",
  tag: "CardInline",
  description: "An elevated card with image and a title and description overlayed, that takes up the full width of its container.",
  category: _types.COMPONENT_TYPES.card,
  layout: {},
  props: {
    image: {
      group: _types.GROUPS.data,
      label: "Image",
      description: "Image",
      formType: _types.FORM_TYPES.image,
      propType: _types.PROP_TYPES.ASSET,
      defaultValue: null,
      editable: true,
      required: false
    },
    title: {
      group: _types.GROUPS.data,
      label: "Title",
      description: "Text to display",
      formType: _types.FORM_TYPES.string,
      propType: _types.PROP_TYPES.STRING,
      defaultValue: "Beautiful West Coast Villa",
      editable: true,
      required: false
    },
    subtitle: {
      group: _types.GROUPS.data,
      label: "Subtitle",
      description: "Subtitle text",
      formType: _types.FORM_TYPES.string,
      propType: _types.PROP_TYPES.STRING,
      defaultValue: "San Diego",
      editable: true,
      required: false
    },
    aspectRatio: {
      group: _types.GROUPS.basic,
      label: "Aspect ratio",
      description: "Aspect ratio of the image",
      formType: _types.FORM_TYPES.aspectRatio,
      propType: _types.PROP_TYPES.NUMBER,
      defaultValue: 1.5,
      editable: true,
      required: false
    },
    elevation: (0, _types.createElevationType)(2)
  }
};
exports.SEED_DATA = SEED_DATA;
//# sourceMappingURL=CardInline.js.map