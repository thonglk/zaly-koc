"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SEED_DATA = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _Image = _interopRequireDefault(require("./Image"));

var _DeprecatedCardWrapper = _interopRequireDefault(require("./DeprecatedCardWrapper"));

var _Elevation = _interopRequireDefault(require("./Elevation"));

var _theming = require("../theming");

var _types = require("@draftbit/types");

var _Config = _interopRequireDefault(require("./Config"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const CardBlock = ({
  image = _Config.default.cardImageUrl,
  title,
  leftDescription,
  rightDescription,
  titleCentered,
  aspectRatio = 1.5,
  elevation = 2,
  numColumns = 3,
  theme: {
    colors,
    roundness,
    typography
  },
  style,
  onPress,
  ...rest
}) => {
  let titleJustification;
  let titleStyle;

  if (titleCentered && !leftDescription && !rightDescription) {
    titleJustification = "center";
  } else {
    titleJustification = "space-between";
  }

  if (numColumns === 1) {
    titleStyle = typography.button;
  } else if (numColumns === 2) {
    titleStyle = typography.headline6;
  } else {
    titleStyle = typography.headline5;
  }

  const rightDescriptionStyles = [typography.subtitle2, {
    color: colors.light
  }];
  return /*#__PURE__*/_react.default.createElement(_DeprecatedCardWrapper.default, _extends({
    style: style,
    onPress: onPress,
    numColumns: numColumns
  }, rest), /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: {
      backgroundColor: colors.background
    }
  }, /*#__PURE__*/_react.default.createElement(_Elevation.default, {
    style: {
      elevation,
      borderRadius: roundness
    }
  }, /*#__PURE__*/_react.default.createElement(_Image.default, {
    style: {
      borderRadius: roundness,
      aspectRatio
    },
    source: typeof image === "string" ? {
      uri: image
    } : image,
    resizeMode: "cover"
  })), title ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: {
      flexDirection: "row",
      alignItems: "center",
      justifyContent: titleJustification,
      marginTop: numColumns === 3 ? 16 : 12
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    numberOfLines: 1,
    style: [titleStyle, {
      color: colors.strong
    }]
  }, title), !leftDescription && rightDescription ? /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: rightDescriptionStyles
  }, rightDescription) : null) : null, leftDescription ? /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: {
      flexDirection: "row",
      justifyContent: "space-between",
      alignItems: "center",
      marginTop: numColumns === 3 ? 4 : 4 / 2
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    numberOfLines: 1,
    style: [typography.body2, {
      color: colors.medium
    }]
  }, leftDescription), rightDescription ? /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    numberOfLines: 1,
    style: rightDescriptionStyles
  }, rightDescription) : null) : null));
};

var _default = (0, _theming.withTheme)(CardBlock);

exports.default = _default;
const SEED_DATA_PROPS = {
  image: {
    group: _types.GROUPS.data,
    label: "Image",
    description: "Image",
    formType: _types.FORM_TYPES.image,
    propType: _types.PROP_TYPES.ASSET,
    defaultValue: null,
    editable: true,
    required: false
  },
  title: {
    group: _types.GROUPS.data,
    label: "Title",
    description: "Text to display",
    formType: _types.FORM_TYPES.string,
    propType: _types.PROP_TYPES.STRING,
    defaultValue: "Beautiful West Coast Villa",
    editable: true,
    required: false
  },
  leftDescription: {
    group: _types.GROUPS.data,
    label: "Left description",
    description: "Text to display on the left",
    formType: _types.FORM_TYPES.string,
    propType: _types.PROP_TYPES.STRING,
    defaultValue: "San Diego",
    editable: true,
    required: false
  },
  rightDescription: {
    group: _types.GROUPS.data,
    label: "Right description",
    description: "Text to display on the right",
    formType: _types.FORM_TYPES.string,
    propType: _types.PROP_TYPES.STRING,
    defaultValue: "$100",
    editable: true,
    required: false
  },
  aspectRatio: {
    group: _types.GROUPS.basic,
    label: "Aspect ratio",
    description: "Aspect ratio of the image",
    formType: _types.FORM_TYPES.aspectRatio,
    propType: _types.PROP_TYPES.NUMBER,
    defaultValue: 1.5,
    editable: true,
    required: false
  },
  titleCentered: {
    group: _types.GROUPS.basic,
    label: "Title centered",
    description: "Whether to center the title",
    formType: _types.FORM_TYPES.boolean,
    propType: _types.PROP_TYPES.BOOLEAN,
    defaultValue: false,
    editable: true,
    required: false
  },
  elevation: (0, _types.createElevationType)(2)
};
const SEED_DATA = [{
  name: "Small Card",
  tag: "CardBlock",
  description: "An elevated card with a title and description, that takes up one third of its container.",
  category: _types.COMPONENT_TYPES.card,
  props: { ...SEED_DATA_PROPS,
    numColumns: (0, _types.createNumColumnsType)({
      defaultValue: 1
    })
  }
}, {
  name: "Medium Block Card",
  tag: "CardBlock",
  description: "An elevated card with a title and description, that takes up one half of its container.",
  category: _types.COMPONENT_TYPES.card,
  props: { ...SEED_DATA_PROPS,
    icon: {
      group: _types.GROUPS.basic,
      label: "Icon",
      description: "Icon to display on the top right",
      formType: _types.FORM_TYPES.icon,
      propType: _types.PROP_TYPES.STRING,
      defaultValue: null,
      editable: true
    },
    numColumns: (0, _types.createNumColumnsType)({
      defaultValue: 2
    })
  }
}, {
  name: "Large Block Card",
  tag: "CardBlock",
  description: "An elevated card with a title and description, that takes up the full width its container.",
  category: _types.COMPONENT_TYPES.card,
  props: { ...SEED_DATA_PROPS,
    icon: {
      group: _types.GROUPS.basic,
      label: "Icon",
      description: "Icon to display on the top right",
      formType: _types.FORM_TYPES.icon,
      propType: _types.PROP_TYPES.STRING,
      defaultValue: null,
      editable: true
    },
    numColumns: (0, _types.createNumColumnsType)({
      defaultValue: 3
    })
  }
}];
exports.SEED_DATA = SEED_DATA;
//# sourceMappingURL=CardBlock.js.map