{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_WIDTH_FACTOR","BAR_WIDTH_ZERO_POSITION","ProgressBar","Component","constructor","props","event","width","onLayout","setState","nativeEvent","layout","progress","progressP","indeterminate","Math","min","max","state","Animated","Value","animationValue","componentDidMount","animate","componentDidUpdate","prevProps","useNativeDriver","animationType","animationConfig","bounciness","animated","spring","toValue","start","velocity","setValue","indeterminateAnimationDuration","timing","duration","easing","Easing","linear","isInteraction","endState","finished","render","borderColor","borderRadius","borderWidth","children","color","style","unfilledColor","restProps","innerWidth","containerStyle","overflow","backgroundColor","progressStyle","height","transform","translateX","interpolate","inputRange","outputRange","I18nManager","isRTL","scaleX","handleLayout","SEED_DATA","name","tag","description","category","COMPONENT_TYPES","deprecated","preview_image_url","supports_list_render","group","GROUPS","data","label","formType","FORM_TYPES","number","propType","PROP_TYPES","NUMBER","defaultValue","step","precision","editable","required","basic","THEME","flatArray","STRING","options"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Animated,\n  Easing,\n  View,\n  I18nManager,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n} from \"react-native\";\nimport {\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  GROUPS,\n  PROP_TYPES,\n} from \"@draftbit/types\";\n\nconst INDETERMINATE_WIDTH_FACTOR = 0.3;\nconst BAR_WIDTH_ZERO_POSITION =\n  INDETERMINATE_WIDTH_FACTOR / (1 + INDETERMINATE_WIDTH_FACTOR);\n\ntype Props = {\n  borderColor?: string;\n  borderRadius?: number;\n  borderWidth?: number;\n  children?: React.ReactNode;\n  color?: string;\n  height?: number;\n  style?: StyleProp<ViewStyle>;\n  unfilledColor?: string;\n  width?: number;\n  animated?: boolean;\n  indeterminate?: boolean;\n  indeterminateAnimationDuration?: number;\n  progress?: number;\n  useNativeDriver?: boolean;\n  animationConfig?: Animated.AnimationConfig;\n  animationType?: \"decay\" | \"timing\" | \"spring\";\n} & ViewProps;\n\ninterface State {\n  width: number;\n  progress: Animated.Value;\n  animationValue: Animated.Value;\n}\n\nexport default class ProgressBar extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const { progress: progressP = 0, indeterminate = false } = props;\n    const progress = Math.min(Math.max(progressP, 0), 1);\n    this.state = {\n      width: 0,\n      progress: new Animated.Value(\n        indeterminate ? INDETERMINATE_WIDTH_FACTOR : progress\n      ),\n      animationValue: new Animated.Value(BAR_WIDTH_ZERO_POSITION),\n    };\n  }\n\n  componentDidMount() {\n    const { indeterminate = false } = this.props;\n    if (indeterminate) {\n      this.animate();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      indeterminate = false,\n      useNativeDriver = false,\n      progress: progressP = 0,\n      animationType = \"spring\",\n      animationConfig = { bounciness: 0 },\n      animated = true,\n    } = this.props;\n\n    if (prevProps.indeterminate !== indeterminate) {\n      if (indeterminate) {\n        this.animate();\n      } else {\n        Animated.spring(this.state.animationValue, {\n          toValue: BAR_WIDTH_ZERO_POSITION,\n          useNativeDriver,\n        }).start();\n      }\n    }\n    if (\n      prevProps.indeterminate !== indeterminate ||\n      prevProps.progress !== progressP\n    ) {\n      const progress = this.props.indeterminate\n        ? INDETERMINATE_WIDTH_FACTOR\n        : Math.min(Math.max(progressP, 0), 1);\n\n      if (animated) {\n        Animated[animationType](this.state.progress, {\n          ...animationConfig,\n          toValue: progress,\n          velocity: 0, //adjust this value if animation fails - velocity is required\n          useNativeDriver,\n        }).start();\n      } else {\n        this.state.progress.setValue(progress);\n      }\n    }\n  }\n\n  handleLayout = (event: LayoutChangeEvent) => {\n    const { width = 150, onLayout } = this.props;\n    if (!width) {\n      this.setState({ width: event.nativeEvent.layout.width });\n    }\n    if (onLayout) {\n      onLayout(event);\n    }\n  };\n\n  animate() {\n    const { useNativeDriver = false, indeterminateAnimationDuration = 1000 } =\n      this.props;\n    this.state.animationValue.setValue(0);\n    Animated.timing(this.state.animationValue, {\n      toValue: 1,\n      duration: indeterminateAnimationDuration,\n      easing: Easing.linear,\n      isInteraction: false,\n      useNativeDriver,\n    }).start((endState) => {\n      if (endState.finished) {\n        this.animate();\n      }\n    });\n  }\n\n  render() {\n    const {\n      borderColor,\n      borderRadius = 4,\n      borderWidth = 1,\n      children,\n      color = \"rgba(0, 122, 255, 1)\",\n      style,\n      unfilledColor,\n      width = 150,\n      ...restProps\n    } = this.props;\n\n    const innerWidth = Math.max(0, width || this.state.width) - borderWidth * 2;\n    const containerStyle: StyleProp<ViewStyle> = {\n      width,\n      borderWidth,\n      borderColor: borderColor || color,\n      borderRadius,\n      overflow: \"hidden\",\n      backgroundColor: unfilledColor,\n    };\n    const progressStyle = {\n      backgroundColor: color,\n      // Always take up full height of container.\n      height: \"100%\",\n      transform: [\n        {\n          translateX: this.state.animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [innerWidth * -INDETERMINATE_WIDTH_FACTOR, innerWidth],\n          }),\n        },\n        {\n          translateX: this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [innerWidth / (I18nManager.isRTL ? 2 : -2), 0],\n          }),\n        },\n        {\n          // Interpolation a temp workaround for https://github.com/facebook/react-native/issues/6278\n          scaleX: this.state.progress.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.0001, 1],\n          }),\n        },\n      ],\n    };\n\n    return (\n      <View\n        style={[containerStyle, style]}\n        onLayout={this.handleLayout}\n        {...restProps}\n      >\n        <Animated.View style={progressStyle} />\n        {children}\n      </View>\n    );\n  }\n}\nexport const SEED_DATA = [\n  {\n    name: \"Progress Bar\",\n    tag: \"ProgressBar\",\n    description: \"A horizontal bar used to show completed progress\",\n    category: COMPONENT_TYPES.deprecated,\n    preview_image_url: \"{CLOUDINARY_URL}/Status_Progress.png\",\n    supports_list_render: false,\n    props: {\n      progress: {\n        group: GROUPS.data,\n        label: \"Progress\",\n        description: \"The amount of progress to display. A number 0-1.\",\n        formType: FORM_TYPES.number,\n        propType: PROP_TYPES.NUMBER,\n        defaultValue: 0.5,\n        min: 0,\n        max: 1,\n        step: 0.01,\n        precision: 2,\n        editable: true,\n        required: true,\n      },\n      color: {\n        group: GROUPS.basic,\n        label: \"Progress Color\",\n        description: \"Custom color for the progress shown\",\n        formType: FORM_TYPES.color,\n        propType: PROP_TYPES.THEME,\n        defaultValue: null,\n        editable: true,\n        required: true,\n      },\n      unfilledColor: {\n        group: GROUPS.basic,\n        label: \"Unfilled Color\",\n        description:\n          \"The color of the unfilled portion of the progress bar(eg. if at 50% then this is the color of the other 50%)\",\n        formType: FORM_TYPES.color,\n        propType: PROP_TYPES.THEME,\n        defaultValue: null,\n        editable: true,\n        required: true,\n      },\n      borderRadius: {\n        group: GROUPS.basic,\n        label: \"Border Radius\",\n        description: \"The border radius of the bar\",\n        formType: FORM_TYPES.number,\n        propType: PROP_TYPES.NUMBER,\n        defaultValue: 10,\n        min: 0,\n        max: 100,\n        step: 1,\n        precision: 1,\n        editable: true,\n        required: true,\n      },\n      borderWidth: {\n        group: GROUPS.basic,\n        label: \"Border Width\",\n        description: \"The width of the border that surrounds the bar.\",\n        formType: FORM_TYPES.number,\n        propType: PROP_TYPES.NUMBER,\n        defaultValue: 1,\n        min: 0,\n        max: 15,\n        step: 1,\n        precision: 1,\n        editable: true,\n        required: true,\n      },\n      borderColor: {\n        group: GROUPS.basic,\n        label: \"Border Color\",\n        description: \"Custom color for border of the entire bar\",\n        formType: FORM_TYPES.color,\n        propType: PROP_TYPES.THEME,\n        defaultValue: null,\n        editable: true,\n        required: true,\n      },\n      animationType: {\n        group: GROUPS.basic,\n        label: \"Animation Type\",\n        description:\n          \"The type of animation that occurs when the bar is filled(Default is Spring)\",\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"spring\",\n        options: [\"decay\", \"timing\", \"spring\"],\n        editable: true,\n        required: true,\n      },\n    },\n    layout: {\n      width: 200,\n      height: 20,\n    },\n  },\n];\n"]}