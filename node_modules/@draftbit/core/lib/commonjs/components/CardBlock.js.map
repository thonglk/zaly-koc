{"version":3,"sources":["CardBlock.tsx"],"names":["CardBlock","image","Config","cardImageUrl","title","leftDescription","rightDescription","titleCentered","aspectRatio","elevation","numColumns","theme","colors","roundness","typography","style","onPress","rest","titleJustification","titleStyle","button","headline6","headline5","rightDescriptionStyles","subtitle2","color","light","backgroundColor","background","borderRadius","uri","flexDirection","alignItems","justifyContent","marginTop","strong","body2","medium","SEED_DATA_PROPS","group","GROUPS","data","label","description","formType","FORM_TYPES","propType","PROP_TYPES","ASSET","defaultValue","editable","required","string","STRING","basic","NUMBER","boolean","BOOLEAN","SEED_DATA","name","tag","category","COMPONENT_TYPES","card","props","icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ImageSourcePropType,\n  View,\n  Text,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport Image from \"./Image\";\nimport Card from \"./DeprecatedCardWrapper\";\nimport Elevation from \"./Elevation\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  createElevationType,\n  createNumColumnsType,\n} from \"@draftbit/types\";\nimport Config from \"./Config\";\nimport theme from \"../styles/DefaultTheme\";\nimport { justificationType } from \"./Justification\";\n\ntype Props = {\n  image?: string | ImageSourcePropType;\n  title?: string;\n  leftDescription?: string;\n  rightDescription?: string;\n  titleCentered: boolean;\n  aspectRatio?: number;\n  elevation?: number;\n  numColumns?: number;\n  theme: typeof theme;\n  style?: StyleProp<ViewStyle>;\n  onPress: () => void;\n};\n\nconst CardBlock: React.FC<Props> = ({\n  image = Config.cardImageUrl,\n  title,\n  leftDescription,\n  rightDescription,\n  titleCentered,\n  aspectRatio = 1.5,\n  elevation = 2,\n  numColumns = 3,\n  theme: { colors, roundness, typography },\n  style,\n  onPress,\n  ...rest\n}) => {\n  let titleJustification: justificationType;\n\n  let titleStyle;\n  if (titleCentered && !leftDescription && !rightDescription) {\n    titleJustification = \"center\";\n  } else {\n    titleJustification = \"space-between\";\n  }\n\n  if (numColumns === 1) {\n    titleStyle = typography.button;\n  } else if (numColumns === 2) {\n    titleStyle = typography.headline6;\n  } else {\n    titleStyle = typography.headline5;\n  }\n\n  const rightDescriptionStyles = [\n    typography.subtitle2,\n    { color: colors.light },\n  ];\n\n  return (\n    <Card style={style} onPress={onPress} numColumns={numColumns} {...rest}>\n      <View style={{ backgroundColor: colors.background }}>\n        <Elevation style={{ elevation, borderRadius: roundness }}>\n          <Image\n            style={{\n              borderRadius: roundness,\n              aspectRatio,\n            }}\n            source={typeof image === \"string\" ? { uri: image } : image}\n            resizeMode=\"cover\"\n          />\n        </Elevation>\n        {title ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: titleJustification,\n              marginTop: numColumns === 3 ? 16 : 12,\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              style={[titleStyle, { color: colors.strong }]}\n            >\n              {title}\n            </Text>\n            {!leftDescription && rightDescription ? (\n              <Text style={rightDescriptionStyles}>{rightDescription}</Text>\n            ) : null}\n          </View>\n        ) : null}\n        {leftDescription ? (\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              marginTop: numColumns === 3 ? 4 : 4 / 2,\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              style={[typography.body2, { color: colors.medium }]}\n            >\n              {leftDescription}\n            </Text>\n            {rightDescription ? (\n              <Text numberOfLines={1} style={rightDescriptionStyles}>\n                {rightDescription}\n              </Text>\n            ) : null}\n          </View>\n        ) : null}\n      </View>\n    </Card>\n  );\n};\n\nexport default withTheme(CardBlock);\n\nconst SEED_DATA_PROPS = {\n  image: {\n    group: GROUPS.data,\n    label: \"Image\",\n    description: \"Image\",\n    formType: FORM_TYPES.image,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  title: {\n    group: GROUPS.data,\n    label: \"Title\",\n    description: \"Text to display\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"Beautiful West Coast Villa\",\n    editable: true,\n    required: false,\n  },\n  leftDescription: {\n    group: GROUPS.data,\n    label: \"Left description\",\n    description: \"Text to display on the left\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"San Diego\",\n    editable: true,\n    required: false,\n  },\n  rightDescription: {\n    group: GROUPS.data,\n    label: \"Right description\",\n    description: \"Text to display on the right\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: \"$100\",\n    editable: true,\n    required: false,\n  },\n  aspectRatio: {\n    group: GROUPS.basic,\n    label: \"Aspect ratio\",\n    description: \"Aspect ratio of the image\",\n    formType: FORM_TYPES.aspectRatio,\n    propType: PROP_TYPES.NUMBER,\n    defaultValue: 1.5,\n    editable: true,\n    required: false,\n  },\n  titleCentered: {\n    group: GROUPS.basic,\n    label: \"Title centered\",\n    description: \"Whether to center the title\",\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n    defaultValue: false,\n    editable: true,\n    required: false,\n  },\n  elevation: createElevationType(2),\n};\n\nexport const SEED_DATA = [\n  {\n    name: \"Small Card\",\n    tag: \"CardBlock\",\n    description:\n      \"An elevated card with a title and description, that takes up one third of its container.\",\n    category: COMPONENT_TYPES.card,\n    props: {\n      ...SEED_DATA_PROPS,\n      numColumns: createNumColumnsType({\n        defaultValue: 1,\n      }),\n    },\n  },\n  {\n    name: \"Medium Block Card\",\n    tag: \"CardBlock\",\n    description:\n      \"An elevated card with a title and description, that takes up one half of its container.\",\n    category: COMPONENT_TYPES.card,\n    props: {\n      ...SEED_DATA_PROPS,\n      icon: {\n        group: GROUPS.basic,\n        label: \"Icon\",\n        description: \"Icon to display on the top right\",\n        formType: FORM_TYPES.icon,\n        propType: PROP_TYPES.STRING,\n        defaultValue: null,\n        editable: true,\n      },\n      numColumns: createNumColumnsType({\n        defaultValue: 2,\n      }),\n    },\n  },\n  {\n    name: \"Large Block Card\",\n    tag: \"CardBlock\",\n    description:\n      \"An elevated card with a title and description, that takes up the full width its container.\",\n    category: COMPONENT_TYPES.card,\n    props: {\n      ...SEED_DATA_PROPS,\n      icon: {\n        group: GROUPS.basic,\n        label: \"Icon\",\n        description: \"Icon to display on the top right\",\n        formType: FORM_TYPES.icon,\n        propType: PROP_TYPES.STRING,\n        defaultValue: null,\n        editable: true,\n      },\n      numColumns: createNumColumnsType({\n        defaultValue: 3,\n      }),\n    },\n  },\n];\n"]}