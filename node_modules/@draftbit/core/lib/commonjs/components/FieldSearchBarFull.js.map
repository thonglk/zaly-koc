{"version":3,"sources":["FieldSearchBarFull.tsx"],"names":["FieldSearchBarFull","Icon","icon","placeholder","style","theme","colors","typography","onChange","changeOverride","onSubmit","submitOverride","value","initialValue","focused","setIsFocused","React","useState","onBlur","useCallback","text","previousInitialValue","useEffect","onFocus","e","lineHeight","typeStyles","body2","padding","styles","container","Config","fieldSearchBarFullIconSize","primary","light","marginLeft","flex","color","medium","StyleSheet","create","flexDirection","alignItems","SEED_DATA","name","tag","description","category","COMPONENT_TYPES","input","preview_image_url","supports_list_render","props","group","GROUPS","basic","label","formType","FORM_TYPES","propType","PROP_TYPES","ASSET","defaultValue","editable","required","string","STRING","action","fieldName","FIELD_NAME","layout"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  TextInput,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  NativeSyntheticEvent,\n  TextInputSubmitEditingEventData,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  FIELD_NAME,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\nimport Config from \"./Config\";\nimport { usePrevious } from \"../hooks\";\n\ntype Props = {\n  icon?: string;\n  placeholder?: string;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n  onChange: (text: string) => void;\n  onSubmit?: (e: NativeSyntheticEvent<TextInputSubmitEditingEventData>) => void;\n  value: string;\n  initialValue?: string;\n} & IconSlot;\n\nconst FieldSearchBarFull: React.FC<Props> = ({\n  Icon,\n  icon = \"search\",\n  placeholder = \"\",\n  style,\n  theme: { colors, typography },\n  onChange: changeOverride,\n  onSubmit: submitOverride,\n  value,\n  initialValue,\n}) => {\n  const [focused, setIsFocused] = React.useState(false);\n\n  const onBlur = () => {\n    setIsFocused(false);\n  };\n\n  const onChange = React.useCallback(\n    (text: string) => {\n      changeOverride && changeOverride(text);\n    },\n    [changeOverride]\n  );\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      onChange(initialValue);\n    }\n  }, [initialValue, previousInitialValue, onChange]);\n\n  const onFocus = () => {\n    setIsFocused(true);\n  };\n\n  const onSubmit = (\n    e: NativeSyntheticEvent<TextInputSubmitEditingEventData>\n  ) => {\n    submitOverride && submitOverride(e);\n  };\n\n  const { lineHeight, ...typeStyles } = typography.body2; // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  return (\n    <View style={[{ padding: 16 }, styles.container, style]}>\n      <Icon\n        name={icon}\n        size={Config.fieldSearchBarFullIconSize}\n        color={focused ? colors.primary : colors.light}\n      />\n      <View style={{ marginLeft: 12, flex: 1 }}>\n        <TextInput\n          clearButtonMode=\"while-editing\"\n          placeholder={placeholder}\n          value={value}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onChangeText={onChange}\n          onSubmitEditing={onSubmit}\n          placeholderTextColor={colors.light}\n          style={[\n            {\n              color: colors.medium,\n            },\n            typeStyles,\n          ]}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n\nexport default withTheme(FieldSearchBarFull);\n\nexport const SEED_DATA = [\n  {\n    name: \"Search Bar\",\n    tag: \"FieldSearchBarFull\",\n    description: \"A search bar with accompanying search icon and clear button.\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url: \"{CLOUDINARY_URL}/Field_SearchBar_Full.png\",\n    supports_list_render: false,\n    props: {\n      icon: {\n        group: GROUPS.basic,\n        label: \"Icon\",\n        description: \"Left icon to display\",\n        formType: FORM_TYPES.icon,\n        propType: PROP_TYPES.ASSET,\n        defaultValue: null,\n        editable: true,\n        required: false,\n      },\n      placeholder: {\n        group: GROUPS.basic,\n        label: \"Placeholder\",\n        description: \"Input placeholder text\",\n        formType: FORM_TYPES.string,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"Search for...\",\n        editable: true,\n        required: false,\n      },\n      onSubmit: {\n        group: GROUPS.basic,\n        label: \"Submit action\",\n        description: \"Action to execute on submission\",\n        editable: true,\n        required: false,\n        formType: FORM_TYPES.action,\n        propType: PROP_TYPES.STRING,\n        defaultValue: null,\n      },\n      fieldName: {\n        ...FIELD_NAME,\n        defaultValue: \"searchBarValue\",\n      },\n    },\n    layout: {},\n  },\n];\n"]}