{"version":3,"sources":["Switch.tsx"],"names":["Switch","value","initialValue","disabled","onValueChange","activeTrackColor","inactiveTrackColor","activeThumbColor","inactiveThumbColor","theme","style","rest","activeTrackThemeColor","colors","primary","inactiveTrackThemeColor","activeThumbThemeColor","inactiveThumbThemeColor","checked","setChecked","React","useState","useEffect","previousInitialValue","false","true","bool","Row","label","direction","RowDirection","SwitchRow","SEED_DATA","name","tag","category","COMPONENT_TYPES","input","layout","props","description","fieldName","handlerPropName","valuePropName","defaultValue","required","group","GROUPS","data"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  Switch as NativeSwitch,\n  SwitchProps,\n  StyleProp,\n  ViewStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport FormRow from \"./FormRow\";\nimport {\n  COMPONENT_TYPES,\n  GROUPS,\n  createBoolProp,\n  createColorProp,\n  createFieldNameProp,\n  createTextProp,\n  createRowDirectionProp,\n  RowDirection,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport { usePrevious } from \"../hooks\";\n\ntype Props = {\n  value: boolean;\n  disabled?: boolean;\n  onValueChange?: (value: boolean) => void;\n  initialValue?: boolean;\n  theme: Theme;\n  activeTrackColor: string;\n  inactiveTrackColor: string;\n  activeThumbColor: string;\n  inactiveThumbColor: string;\n} & SwitchProps;\n\nfunction Switch({\n  value = false,\n  initialValue,\n  disabled,\n  onValueChange,\n  activeTrackColor,\n  inactiveTrackColor,\n  activeThumbColor,\n  inactiveThumbColor,\n  theme,\n  style,\n  ...rest\n}: Props) {\n  const activeTrackThemeColor = activeTrackColor || theme.colors.primary;\n  const inactiveTrackThemeColor = inactiveTrackColor || \"#EEE\";\n\n  const activeThumbThemeColor = activeThumbColor || \"#FFF\";\n  const inactiveThumbThemeColor = inactiveThumbColor || \"#FFF\";\n\n  const [checked, setChecked] = React.useState(value);\n  React.useEffect(() => {\n    if (value !== checked) {\n      setChecked(value);\n    }\n  }, [value, checked]);\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      setChecked(initialValue);\n      onValueChange && onValueChange(initialValue);\n    }\n  }, [initialValue, previousInitialValue, setChecked, onValueChange]);\n\n  return (\n    <NativeSwitch\n      value={checked}\n      disabled={disabled}\n      trackColor={{\n        false: inactiveTrackThemeColor,\n        true: activeTrackThemeColor,\n      }}\n      thumbColor={value ? activeThumbThemeColor : inactiveThumbThemeColor}\n      // @ts-ignore react-native-web only\n      activeThumbColor={activeThumbThemeColor}\n      ios_backgroundColor={inactiveTrackThemeColor}\n      style={style}\n      onValueChange={(bool) => {\n        setChecked(bool);\n        onValueChange && onValueChange(bool);\n      }}\n      {...rest}\n    />\n  );\n}\n\ntype RowProps = {\n  label: string;\n  direction: RowDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nfunction Row({\n  label = \"Label\",\n  direction = RowDirection.Row,\n  style,\n  value = false,\n  disabled,\n  onValueChange,\n  activeTrackColor,\n  inactiveTrackColor,\n  activeThumbColor,\n  inactiveThumbColor,\n  theme,\n  ...rest\n}: Props & RowProps) {\n  const [checked, setChecked] = React.useState(value);\n\n  React.useEffect(() => {\n    if (value !== checked) {\n      setChecked(value);\n    }\n  }, [value, checked]);\n\n  return (\n    <FormRow\n      disabled={disabled}\n      onPress={() => {\n        setChecked(!checked);\n        onValueChange && onValueChange(!checked);\n      }}\n      label={label}\n      direction={direction}\n      style={style}\n      {...rest}\n    >\n      <Switch\n        theme={theme}\n        value={checked}\n        disabled={disabled}\n        onValueChange={onValueChange}\n        activeTrackColor={activeTrackColor}\n        inactiveTrackColor={inactiveTrackColor}\n        activeThumbColor={activeThumbColor}\n        inactiveThumbColor={inactiveThumbColor}\n      />\n    </FormRow>\n  );\n}\n\nconst SwitchRow = withTheme(Row);\nexport { SwitchRow };\n\nexport default withTheme(Switch);\n\nexport const SEED_DATA = [\n  {\n    name: \"Switch\",\n    tag: \"Switch\",\n    category: COMPONENT_TYPES.input,\n    layout: {},\n    props: {\n      disabled: createBoolProp({\n        label: \"Disabled\",\n        description: \"Boolean to handle disabling the switch\",\n      }),\n      fieldName: createFieldNameProp({\n        handlerPropName: \"onValueChange\",\n        valuePropName: \"value\",\n        defaultValue: \"switchValue\",\n      }),\n      activeTrackColor: createColorProp({\n        label: \"Active Track Color\",\n      }),\n      inactiveTrackColor: createColorProp({\n        label: \"Inactive Track Color\",\n      }),\n      activeThumbColor: createColorProp({\n        label: \"Active Thumb Color\",\n      }),\n      inactiveThumbColor: createColorProp({\n        label: \"Inactive Thumb Color\",\n      }),\n    },\n  },\n  {\n    name: \"Switch Row\",\n    tag: \"SwitchRow\",\n    category: COMPONENT_TYPES.input,\n    layout: {},\n    props: {\n      label: createTextProp({\n        label: \"Label\",\n        description: \"Label to show with the checkbox\",\n        required: true,\n        defaultValue: \"First Option\",\n      }),\n      direction: createRowDirectionProp(),\n      disabled: createBoolProp({\n        label: \"Disabled\",\n        description: \"Boolean to handle disabling the switch\",\n        group: GROUPS.data,\n      }),\n      fieldName: createFieldNameProp({\n        handlerPropName: \"onValueChange\",\n        valuePropName: \"value\",\n        defaultValue: \"switchValue\",\n      }),\n      activeTrackColor: createColorProp({\n        label: \"Active Track Color\",\n      }),\n      inactiveTrackColor: createColorProp({\n        label: \"Inactive Track Color\",\n      }),\n      activeThumbColor: createColorProp({\n        label: \"Active Thumb Color\",\n      }),\n      inactiveThumbColor: createColorProp({\n        label: \"Inactive Thumb Color\",\n      }),\n    },\n  },\n];\n"]}