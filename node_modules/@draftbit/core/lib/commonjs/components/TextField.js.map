{"version":3,"sources":["TextField.tsx"],"names":["AnimatedText","Animated","createAnimatedComponent","Text","FOCUS_ANIMATION_DURATION","BLUR_ANIMATION_DURATION","ICON_SIZE","TextField","React","Component","labeled","Value","props","value","error","focused","placeholder","labelLayout","measured","width","setTimeout","clearTimeout","_timer","setState","timing","state","toValue","duration","useNativeDriver","start","disabled","onChangeText","undefined","getDerivedStateFromProps","nextProps","prevState","componentDidMount","initialValue","_handleChangeText","_minmizeLabel","componentDidUpdate","prevProps","_restoreLabel","label","_showPlaceholder","_hidePlaceholder","componentWillUnmount","toggleFocus","setNativeProps","args","_root","isFocused","clear","focus","blur","render","Icon","type","leftIconName","leftIconMode","rightIconName","assistiveText","multiline","style","theme","colors","typography","roundness","disabledOpacity","rest","MINIMIZED_LABEL_Y_OFFSET","caption","lineHeight","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","subtitle1","fontSize","MINIMIZED_LABEL_FONT_SIZE","hasActiveOutline","inputTextColor","activeColor","underlineColor","borderColor","placeholderColor","containerStyle","backgroundColor","inputStyle","strong","light","divider","primary","background","placeholderTextColor","paddingVertical","color","paddingLeft","paddingRight","height","assistiveTextLeftMargin","borderTopLeftRadius","borderTopRightRadius","paddingBottom","marginTop","borderRadius","borderWidth","paddingTop","opacity","paddingHorizontal","marginLeft","leftIconColor","leftIconProps","size","name","leftIconStyle","position","labelStyle","top","left","transform","translateY","interpolate","inputRange","outputRange","scale","translateX","textStyles","inputStyles","styles","input","marginHorizontal","bgColor","padding","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderCol","styleProp","StyleSheet","flatten","container","underline","scaleY","absoluteFill","e","nativeEvent","layout","ref","c","onChange","editable","selectionColor","onFocus","_handleFocus","onBlur","_handleBlur","underlineColorAndroid","right","create","alignSelf","bottom","flexGrow","justifyContent","textAlignVertical","margin","textAlign","I18nManager","isRTL","SEED_DATA_PROPS","TEXT_INPUT_PROPS","group","GROUPS","data","description","formType","FORM_TYPES","string","propType","PROP_TYPES","STRING","defaultValue","required","basic","boolean","BOOLEAN","icon","ASSET","flatArray","options","fieldName","FIELD_NAME","handlerPropName","SEED_DATA","tag","category","COMPONENT_TYPES","preview_image_url","supports_list_render","secureTextEntry","uncategorized"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  Text,\n  I18nManager,\n  StyleProp,\n  TextInputProps,\n  NativeSyntheticEvent,\n  TextInputChangeEventData,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  ImageStyle,\n} from \"react-native\";\nimport { withTheme } from \"../theming\";\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n  FIELD_NAME,\n  TEXT_INPUT_PROPS,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\nimport { applyStyles, extractStyles } from \"../utilities\";\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst FOCUS_ANIMATION_DURATION = 150;\nconst BLUR_ANIMATION_DURATION = 180;\nconst ICON_SIZE = 24;\n\nexport type Props = {\n  type?: \"solid\" | \"underline\";\n  initialValue?: string;\n  disabled?: boolean;\n  label?: string;\n  error?: boolean;\n  leftIconName?: string;\n  leftIconMode?: \"inset\" | \"outset\";\n  onChangeText: (\n    text: string | NativeSyntheticEvent<TextInputChangeEventData>\n  ) => void;\n  rightIconName?: string;\n  assistiveText?: string;\n  multiline?: boolean;\n  style?: StyleProp<ViewStyle> & { height?: number };\n  theme: Theme;\n  render?: (\n    props: TextInputProps & { ref: (c: NativeTextInput) => void }\n  ) => React.ReactNode;\n} & TextInputProps &\n  IconSlot;\n\ninterface State {\n  labeled: Animated.Value;\n  focused?: boolean;\n  placeholder?: string | undefined;\n  labelLayout: {\n    measured: boolean;\n    width: number;\n  };\n  value?: string;\n}\n\nclass TextField extends React.Component<Props, State> {\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      value:\n        typeof nextProps.value !== \"undefined\"\n          ? nextProps.value\n          : prevState.value,\n    };\n  }\n\n  state: State = {\n    labeled: new Animated.Value(this.props.value || this.props.error ? 0 : 1),\n    focused: false,\n    placeholder: this.props.error ? this.props.placeholder : \"\",\n    labelLayout: {\n      measured: false,\n      width: 0,\n    },\n  };\n\n  componentDidMount() {\n    if (this.props.initialValue) {\n      this._handleChangeText(this.props.initialValue);\n    }\n\n    if (this.props.placeholder) {\n      this._minmizeLabel();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (\n      prevState.focused !== this.state.focused ||\n      prevState.value !== this.state.value\n    ) {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      if (\n        this.state.value ||\n        this.state.focused ||\n        this.props.error ||\n        this.props.placeholder\n      ) {\n        this._minmizeLabel();\n      } else {\n        this._restoreLabel();\n      }\n    }\n\n    if (\n      prevState.focused !== this.state.focused ||\n      prevProps.label !== this.props.label\n    ) {\n      // Show placeholder text only if the input is focused, or has error, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (this.state.focused || this.props.error || !this.props.label) {\n        this._showPlaceholder();\n      } else {\n        this._hidePlaceholder();\n      }\n    }\n  }\n\n  _timer = setTimeout(() => {}, 0);\n\n  componentWillUnmount() {\n    clearTimeout(this._timer);\n  }\n\n  _showPlaceholder = () => {\n    clearTimeout(this._timer);\n\n    // Set the placeholder in a delay to offset the label animation\n    // If we show it immediately, they'll overlap and look ugly\n    this._timer = setTimeout(\n      () =>\n        this.setState({\n          placeholder: this.props.placeholder,\n        }),\n      50\n    );\n  };\n\n  _hidePlaceholder = () =>\n    this.setState({\n      placeholder: \"\",\n    });\n\n  _restoreLabel = () =>\n    Animated.timing(this.state.labeled, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start();\n\n  _minmizeLabel = () =>\n    Animated.timing(this.state.labeled, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start();\n\n  _handleFocus = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState({ focused: true });\n  };\n\n  _handleBlur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState({ focused: false });\n  };\n\n  _handleChangeText = (\n    value: NativeSyntheticEvent<TextInputChangeEventData> | string\n  ) => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setState({ value: value as string });\n    this.props.onChangeText && this.props.onChangeText(value);\n  };\n\n  toggleFocus() {\n    this.setState((prevState: State) => ({ focused: !prevState.focused }));\n  }\n\n  _root: NativeTextInput | undefined = undefined;\n  /**\n   * @internal\n   */\n  setNativeProps(args: Props) {\n    return this._root && this._root.setNativeProps(args);\n  }\n\n  isFocused() {\n    return this._root && this._root.isFocused();\n  }\n\n  clear() {\n    return this._root && this._root.clear();\n  }\n\n  focus() {\n    return this._root && this._root.focus();\n  }\n\n  blur() {\n    return this._root && this._root.blur();\n  }\n\n  render() {\n    const {\n      Icon,\n      type = \"underline\",\n      disabled = false,\n      label,\n      error = false,\n      leftIconName,\n      leftIconMode,\n      rightIconName,\n      assistiveText,\n      multiline = false,\n      style,\n      theme: { colors, typography, roundness, disabledOpacity },\n      render = (props) => <NativeTextInput {...props} />,\n      ...rest\n    } = this.props;\n\n    const MINIMIZED_LABEL_Y_OFFSET = -(typography.caption.lineHeight + 4);\n    const OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -(16 * 0.5 + 4);\n    const MAXIMIZED_LABEL_FONT_SIZE = typography.subtitle1.fontSize;\n    const MINIMIZED_LABEL_FONT_SIZE = typography.caption.fontSize;\n\n    const hasActiveOutline = this.state.focused || error;\n\n    let inputTextColor,\n      activeColor,\n      underlineColor,\n      borderColor,\n      placeholderColor,\n      containerStyle: StyleProp<ViewStyle>,\n      backgroundColor,\n      inputStyle: StyleProp<TextStyle>;\n\n    inputTextColor = colors.strong;\n    if (disabled) {\n      activeColor = colors.light;\n      placeholderColor = colors.light;\n      borderColor = \"transparent\";\n      underlineColor = \"transparent\";\n      backgroundColor = colors.divider;\n    } else {\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = borderColor = colors.light;\n      underlineColor = colors.light;\n      backgroundColor = colors.background;\n    }\n\n    if (rest.placeholderTextColor) {\n      placeholderColor = rest.placeholderTextColor;\n    }\n\n    const { lineHeight, ...subtitle1 } = typography.subtitle1;\n\n    inputStyle = {\n      paddingVertical: 0,\n      color: inputTextColor,\n      paddingLeft:\n        leftIconName && leftIconMode === \"inset\"\n          ? ICON_SIZE + 12 + (type === \"solid\" ? 16 : 0)\n          : 0,\n      paddingRight: rightIconName ? ICON_SIZE + 16 + 4 : 12,\n      ...subtitle1,\n    };\n\n    if (!multiline) {\n      inputStyle.height = lineHeight;\n    }\n\n    let assistiveTextLeftMargin;\n    if (type === \"underline\") {\n      containerStyle = {\n        borderTopLeftRadius: roundness,\n        borderTopRightRadius: roundness,\n        paddingBottom: 12,\n        marginTop: 16,\n      };\n\n      if (leftIconName && leftIconMode === \"outset\") {\n        assistiveTextLeftMargin = ICON_SIZE + 8;\n      } else {\n        assistiveTextLeftMargin = 0;\n      }\n    } else {\n      containerStyle = {\n        borderRadius: roundness,\n        borderColor: hasActiveOutline ? activeColor : borderColor,\n        borderWidth: 1,\n        paddingTop: this.state.labeled ? 16 * 1.5 : 16,\n        paddingBottom: this.state.labeled ? 16 * 0.5 : 16,\n        opacity: disabled ? disabledOpacity : 1,\n        backgroundColor,\n      };\n\n      if (leftIconName && leftIconMode === \"inset\") {\n        assistiveTextLeftMargin = 16 + 4;\n      } else if (leftIconName && leftIconMode === \"outset\") {\n        assistiveTextLeftMargin = ICON_SIZE + 8 + 12;\n      } else {\n        assistiveTextLeftMargin = 12;\n      }\n\n      inputStyle.paddingHorizontal = 12;\n    }\n\n    if (leftIconName && leftIconMode === \"outset\") {\n      containerStyle.marginLeft = ICON_SIZE + 8;\n    }\n\n    let leftIconColor;\n    if (error) {\n      leftIconColor = colors.error;\n    } else if (this.state.focused) {\n      leftIconColor = colors.primary;\n    } else {\n      leftIconColor = colors.light;\n    }\n\n    const leftIconProps = {\n      size: 24,\n      color: leftIconColor,\n      name: leftIconName || \"\",\n    };\n\n    const leftIconStyle: ImageStyle = {\n      position: \"absolute\",\n      marginTop:\n        type === \"solid\"\n          ? MINIMIZED_LABEL_FONT_SIZE + 4\n          : leftIconMode === \"outset\"\n          ? 16\n          : 0,\n    };\n\n    const labelStyle = {\n      ...typography.subtitle1,\n      top: type === \"solid\" ? 16 : 0,\n      left:\n        leftIconName && leftIconMode === \"inset\"\n          ? ICON_SIZE + (type === \"solid\" ? 16 : 12)\n          : 0,\n      transform: [\n        {\n          // Move label to top\n          translateY: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              type === \"solid\"\n                ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n                : MINIMIZED_LABEL_Y_OFFSET,\n              0,\n            ],\n          }),\n        },\n        {\n          // Make label smaller\n          scale: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE,\n              1,\n            ],\n          }),\n        },\n        {\n          // Offset label scale since RN doesn't support transform origin\n          translateX: this.state.labeled.interpolate({\n            inputRange: [0, 1],\n            outputRange: [\n              -(1 - MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE) *\n                (this.state.labelLayout.width / 2),\n              0,\n            ],\n          }),\n        },\n      ],\n    };\n\n    const { textStyles } = extractStyles(style);\n    const inputStyles = applyStyles(\n      [\n        styles.input,\n        inputStyle,\n        type === \"solid\" ? { marginHorizontal: 12 } : {},\n      ],\n      textStyles\n    );\n\n    const {\n      backgroundColor: bgColor,\n      padding,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n      borderRadius,\n      borderWidth,\n      borderTopWidth,\n      borderRightWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderColor: borderCol,\n      ...styleProp\n    } = StyleSheet.flatten(style || {}) as ViewStyle & { height?: number };\n\n    return (\n      <View style={[styles.container, styleProp]}>\n        {leftIconName && leftIconMode === \"outset\" ? (\n          <Icon {...leftIconProps} style={leftIconStyle} />\n        ) : null}\n        <View\n          style={applyStyles([containerStyle], {\n            height: style?.height,\n            backgroundColor: bgColor,\n            padding,\n            paddingTop,\n            paddingBottom,\n            paddingLeft,\n            paddingRight,\n            borderRadius,\n            borderWidth,\n            borderTopWidth,\n            borderRightWidth,\n            borderBottomWidth,\n            borderLeftWidth,\n            borderColor: borderCol,\n          })}\n        >\n          {type === \"underline\" ? (\n            // When type === 'flat', render an underline\n            <Animated.View\n              style={[\n                styles.underline,\n                {\n                  backgroundColor:\n                    bgColor ||\n                    (error\n                      ? colors.error\n                      : this.state.focused\n                      ? activeColor\n                      : underlineColor),\n                  // Underlines is thinner when input is not focused\n                  transform: [{ scaleY: this.state.focused ? 1 : 0.5 }],\n                },\n              ]}\n            />\n          ) : null}\n\n          {label ? (\n            // Position colored placeholder and gray placeholder on top of each other and crossfade them\n            // This gives the effect of animating the color, but allows us to use native driver\n            <View\n              pointerEvents=\"none\"\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  opacity:\n                    // Hide the label in minimized state until we measure its width\n                    this.state.value || this.state.focused\n                      ? this.state.labelLayout.measured\n                        ? 1\n                        : 0\n                      : 1,\n                },\n              ]}\n            >\n              <AnimatedText\n                onLayout={(e: LayoutChangeEvent) =>\n                  this.setState({\n                    labelLayout: {\n                      width: e.nativeEvent.layout.width,\n                      measured: true,\n                    },\n                  })\n                }\n                style={[\n                  styles.placeholder,\n                  type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                  labelStyle,\n                  {\n                    color: placeholderColor,\n                    opacity: this.state.labeled.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [hasActiveOutline ? 1 : 0, 0],\n                    }),\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {label}\n              </AnimatedText>\n              <AnimatedText\n                style={[\n                  styles.placeholder,\n                  type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                  labelStyle,\n                  {\n                    color: placeholderColor,\n                    opacity: hasActiveOutline ? this.state.labeled : 1,\n                  },\n                ]}\n                numberOfLines={1}\n              >\n                {label}\n              </AnimatedText>\n            </View>\n          ) : null}\n\n          {leftIconName && leftIconMode === \"inset\" ? (\n            <Icon\n              {...leftIconProps}\n              style={{\n                ...leftIconStyle,\n                marginLeft: type === \"solid\" ? 16 : 0,\n              }}\n            />\n          ) : null}\n\n          {render({\n            ref: (c: NativeTextInput) => {\n              this._root = c;\n            },\n            onChange: this._handleChangeText,\n            placeholder: label\n              ? this.state.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderColor,\n            editable: !disabled,\n            selectionColor: activeColor,\n            multiline,\n            onFocus: this._handleFocus,\n            onBlur: this._handleBlur,\n            underlineColorAndroid: \"transparent\",\n            style: inputStyles,\n            ...rest,\n            value: this.state.value,\n          })}\n        </View>\n        {rightIconName ? (\n          <Icon\n            name={rightIconName}\n            size={ICON_SIZE}\n            color={colors.light}\n            style={{\n              position: \"absolute\",\n              right: 16,\n              marginTop: type === \"solid\" ? MINIMIZED_LABEL_FONT_SIZE + 4 : 16,\n            }}\n          />\n        ) : null}\n\n        {assistiveText ? (\n          <Text\n            style={[\n              {\n                color: error ? colors.error : colors.light,\n                marginTop: 8,\n                marginLeft: assistiveTextLeftMargin,\n              },\n            ]}\n          >\n            {assistiveText}\n          </Text>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nexport default withTheme(TextField);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 0,\n  },\n  underline: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    textAlignVertical: \"center\",\n    margin: 0,\n    textAlign: I18nManager.isRTL ? \"right\" : \"left\",\n  },\n});\n\nconst SEED_DATA_PROPS = {\n  ...TEXT_INPUT_PROPS,\n  label: {\n    group: GROUPS.data,\n    label: \"Label\",\n    description: \"The label to be displayed on the text field\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: null,\n    editable: true,\n    required: true,\n  },\n  assistiveText: {\n    group: GROUPS.basic,\n    label: \"Assistive text\",\n    description: \"Helper text to display below the input\",\n    formType: FORM_TYPES.string,\n    propType: PROP_TYPES.STRING,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  error: {\n    group: GROUPS.data,\n    label: \"Error\",\n    description: \"Whether the input should display the error state\",\n    formType: FORM_TYPES.boolean,\n    propType: PROP_TYPES.BOOLEAN,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  leftIconName: {\n    group: GROUPS.basic,\n    label: \"Left icon name\",\n    description: \"The icon to display on the left\",\n    formType: FORM_TYPES.icon,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  leftIconMode: {\n    group: GROUPS.basic,\n    label: \"Left icon mode\",\n    description:\n      \"The mode of the icon to display on the left. 'inset' or 'outset'.\",\n    formType: FORM_TYPES.flatArray,\n    propType: PROP_TYPES.STRING,\n    defaultValue: null /* inset */,\n    options: [\"inset\", \"outset\"],\n    editable: true,\n    required: true,\n  },\n  rightIconName: {\n    group: GROUPS.basic,\n    label: \"Right icon name\",\n    description: \"The icon to display on the right\",\n    formType: FORM_TYPES.icon,\n    propType: PROP_TYPES.ASSET,\n    defaultValue: null,\n    editable: true,\n    required: false,\n  },\n  fieldName: {\n    ...FIELD_NAME,\n    handlerPropName: \"onChangeText\",\n    defaultValue: \"textFieldValue\",\n  },\n};\n\nexport const SEED_DATA = [\n  {\n    name: \"Text Field\",\n    tag: \"TextField\",\n    description: \"A text input with a solid border or underline\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url: \"{CLOUDINARY_URL}/Textfield.png\",\n    supports_list_render: false,\n    props: {\n      ...SEED_DATA_PROPS,\n      type: {\n        label: \"Appearance\",\n        description: \"Type of Datepicker\",\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"solid\",\n        options: [\"solid\", \"underline\"],\n        editable: true,\n        required: true,\n        group: GROUPS.basic,\n      },\n      secureTextEntry: {\n        group: GROUPS.basic,\n        label: \"Password field\",\n        description:\n          \"If true, this turns the field into a password field, hiding the text\",\n        formType: FORM_TYPES.boolean,\n        propType: PROP_TYPES.BOOLEAN,\n        defaultValue: null,\n        editable: true,\n        required: false,\n      },\n    },\n    layout: {},\n  },\n  {\n    name: \"Text Area\",\n    tag: \"TextField\",\n    description: \"A text area with a solid border or underline\",\n    category: COMPONENT_TYPES.input,\n    preview_image_url: \"{CLOUDINARY_URL}/TextArea.png\",\n    supports_list_render: false,\n    props: {\n      ...SEED_DATA_PROPS,\n      type: {\n        label: \"Appearance\",\n        description: \"Type of Datepicker\",\n        formType: FORM_TYPES.flatArray,\n        propType: PROP_TYPES.STRING,\n        defaultValue: \"solid\",\n        options: [\"solid\", \"underline\"],\n        editable: true,\n        required: true,\n        group: GROUPS.basic,\n      },\n      multiline: {\n        label: \"Multiline\",\n        description: \"Multiline\",\n        group: GROUPS.uncategorized,\n        formType: FORM_TYPES.boolean,\n        propType: PROP_TYPES.BOOLEAN,\n        defaultValue: true,\n        editable: false,\n        required: false,\n      },\n    },\n    layout: {},\n  },\n];\n"]}