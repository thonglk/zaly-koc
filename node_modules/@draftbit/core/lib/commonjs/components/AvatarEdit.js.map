{"version":3,"sources":["AvatarEdit.tsx"],"names":["AvatarEdit","Icon","image","size","onPress","style","theme","rest","colorStyles","editBackgroundColor","colors","primary","editIconColor","surface","editBorderColor","dimensions","width","height","position","top","right","borderColor","backgroundColor","borderRadius","padding","SEED_DATA","name","tag","description","category","COMPONENT_TYPES","deprecated","layout","props","group","GROUPS","basic","label","editable","required","formType","FORM_TYPES","number","propType","PROP_TYPES","NUMBER","min","max","precision","step","defaultValue","data","ASSET"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, ImageSourcePropType, StyleProp, ViewStyle } from \"react-native\";\nimport Touchable from \"./Touchable\";\nimport CircleImage from \"./CircleImage\";\nimport { withTheme } from \"../theming\";\n\nimport {\n  GROUPS,\n  COMPONENT_TYPES,\n  FORM_TYPES,\n  PROP_TYPES,\n} from \"@draftbit/types\";\nimport type { Theme } from \"../styles/DefaultTheme\";\nimport type { IconSlot } from \"../interfaces/Icon\";\n\ntype Props = {\n  image: string | ImageSourcePropType;\n  size?: number;\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n} & IconSlot;\n\nconst AvatarEdit: React.FC<Props> = ({\n  Icon,\n  image,\n  size = 80,\n  onPress = () => {},\n  style,\n  theme,\n  ...rest\n}) => {\n  const colorStyles = {\n    editBackgroundColor: theme.colors.primary,\n    editIconColor: theme.colors.surface,\n    editBorderColor: theme.colors.surface,\n  };\n\n  const dimensions = {\n    width: size,\n    height: size,\n  };\n\n  return (\n    <View style={[style, dimensions]} {...rest}>\n      <Touchable onPress={onPress}>\n        <CircleImage source={image} size={size} />\n        <View\n          style={{\n            position: \"absolute\",\n            top: -3,\n            right: -3,\n            borderColor: colorStyles.editBorderColor,\n            backgroundColor: colorStyles.editBackgroundColor,\n            borderRadius: size * (3 / 16),\n            padding: size * (3 / 32),\n          }}\n        >\n          <Icon\n            name=\"MaterialIcons/edit\"\n            color={colorStyles.editIconColor}\n            size={size * (3 / 16)}\n          />\n        </View>\n      </Touchable>\n    </View>\n  );\n};\n\nexport default withTheme(AvatarEdit);\n\nexport const SEED_DATA = {\n  name: \"Avatar Edit\",\n  tag: \"AvatarEdit\",\n  description: \"An avatar with an edit icon in the top right\",\n  category: COMPONENT_TYPES.deprecated,\n  layout: {\n    width: 64,\n    height: 64,\n  },\n  props: {\n    size: {\n      group: GROUPS.basic,\n      label: \"Size\",\n      description: \"Size of avatar / width, height\",\n      editable: true,\n      required: false,\n      formType: FORM_TYPES.number,\n      propType: PROP_TYPES.NUMBER,\n      min: 0,\n      max: 300,\n      precision: 0,\n      step: 1,\n      defaultValue: 80,\n    },\n    image: {\n      group: GROUPS.data,\n      label: \"Image\",\n      description: \"Name of the image\",\n      editable: true,\n      required: true,\n      formType: FORM_TYPES.image,\n      propType: PROP_TYPES.ASSET,\n      defaultValue: \"brightness-5\",\n    },\n  },\n};\n"]}