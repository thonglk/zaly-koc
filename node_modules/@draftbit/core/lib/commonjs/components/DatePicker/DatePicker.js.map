{"version":3,"sources":["DatePicker.tsx"],"names":["AnimatedText","Animated","createAnimatedComponent","Text","FOCUS_ANIMATION_DURATION","BLUR_ANIMATION_DURATION","ICON_SIZE","MONTHS","DatePicker","Icon","style","theme","colors","typography","roundness","disabledOpacity","date","onDateChange","initialValue","disabled","mode","format","type","leftIconName","rightIconName","leftIconMode","label","placeholder","props","value","setValue","React","useState","pickerVisible","setPickerVisible","labeled","Value","placeholder1","setPlaceholder1","focused","setFocused","labelLayout","setLabelLayout","measured","width","previousInitialValue","useEffect","getValidDate","Date","getMonth","formatDate","newDate","toLocaleTimeString","toLocaleString","getDate","getFullYear","toggleVisibility","_handleBlur","_handleFocus","insets","_hidePlaceholder","timing","toValue","duration","useNativeDriver","start","_showPlaceholder","setTimeout","clearTimeout","MINIMIZED_LABEL_Y_OFFSET","caption","lineHeight","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","MAXIMIZED_LABEL_FONT_SIZE","subtitle1","fontSize","MINIMIZED_LABEL_FONT_SIZE","hasActiveOutline","inputTextColor","activeColor","underlineColor","borderColor","placeholderColor","containerStyle","backgroundColor","inputStyle","strong","light","divider","primary","background","paddingVertical","color","paddingLeft","paddingRight","height","borderTopLeftRadius","borderTopRightRadius","paddingBottom","marginTop","borderRadius","borderWidth","paddingTop","opacity","paddingHorizontal","marginLeft","leftIconColor","leftIconProps","size","name","leftIconStyle","position","labelStyle","top","left","transform","translateY","interpolate","inputRange","outputRange","scale","translateX","inputStyles","styles","input","marginHorizontal","container","underline","scaleY","StyleSheet","absoluteFill","e","nativeEvent","layout","right","picker","pickerContainer","bottom","Platform","OS","closeButton","_event","data","create","alignSelf","flexDirection","justifyContent","flexGrow","textAlignVertical","margin","textAlign","I18nManager","isRTL"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n  View,\n  Animated,\n  Text,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  Platform,\n  TextInputProps,\n  ImageStyle,\n  I18nManager,\n  LayoutChangeEvent,\n  TextInput as NativeTextInput,\n} from \"react-native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\nimport dateFormat from \"dateformat\";\nimport { withTheme } from \"../../theming\";\nimport Portal from \"../Portal/Portal\";\nimport Button from \"../DeprecatedButton\";\nimport Touchable from \"../Touchable\";\nimport DateTimePicker from \"./DatePickerComponent\";\n\nimport type { Theme } from \"../../styles/DefaultTheme\";\nimport type { IconSlot } from \"../../interfaces/Icon\";\nimport { usePrevious } from \"../../hooks\";\n\nconst AnimatedText = Animated.createAnimatedComponent(Text);\n\nconst FOCUS_ANIMATION_DURATION = 150;\nconst BLUR_ANIMATION_DURATION = 180;\nconst ICON_SIZE = 24;\n\ntype Props = {\n  style?: StyleProp<ViewStyle> & { height?: number };\n  theme: Theme;\n  // initialDate?: string;\n  // locale?: string;\n  // minuteInterval?: number;\n  // timeZoneOffsetInMinutes?: number;\n  // error?: boolean;\n  // type?: string;\n  date?: Date;\n  format?: string;\n  onDateChange?: (data?: Date) => void;\n  initialValue?: Date;\n  disabled?: boolean;\n  mode?: \"date\" | \"time\" | \"datetime\";\n  type?: \"solid\" | \"underline\";\n  label?: string;\n  placeholder?: string;\n  leftIconName?: string;\n  leftIconMode?: \"outset\" | \"inset\";\n  rightIconName?: string;\n} & IconSlot &\n  TextInputProps;\n\nconst MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst DatePicker: React.FC<Props> = ({\n  Icon,\n  style,\n  theme: { colors, typography, roundness, disabledOpacity },\n  date,\n  onDateChange = () => {},\n  initialValue,\n  disabled = false,\n  mode = \"date\",\n  format,\n  type = \"underline\",\n  leftIconName,\n  rightIconName,\n  leftIconMode = \"inset\",\n  label,\n  placeholder,\n  ...props\n}) => {\n  const [value, setValue] = React.useState<any>(date);\n  const [pickerVisible, setPickerVisible] = React.useState(false);\n  const [labeled] = React.useState<Animated.Value>(\n    new Animated.Value(date ? 0 : 1)\n  );\n  const [placeholder1, setPlaceholder1] = React.useState(\"\");\n  const [focused, setFocused] = React.useState<boolean>(false);\n  const [labelLayout, setLabelLayout] = React.useState<{\n    measured: Boolean;\n    width: number;\n  }>({ measured: false, width: 0 });\n\n  const previousInitialValue = usePrevious(initialValue);\n  React.useEffect(() => {\n    if (initialValue !== previousInitialValue) {\n      setValue(initialValue);\n      onDateChange(initialValue);\n    }\n  }, [initialValue, previousInitialValue, setValue, onDateChange]);\n\n  const getValidDate = (): Date => {\n    if (!value) {\n      return new Date();\n    }\n    return typeof value?.getMonth === \"function\" ? value : new Date();\n  };\n\n  const formatDate = (): string => {\n    if (!value) return \"\";\n    let newDate = getValidDate();\n\n    if (format) return dateFormat(newDate, format);\n\n    if (mode === \"time\") {\n      return `${newDate.toLocaleTimeString()}`;\n    }\n\n    if (mode === \"datetime\") {\n      return `${newDate.toLocaleString()}`;\n    }\n\n    return `${\n      MONTHS[newDate.getMonth()]\n    } ${newDate.getDate()}, ${newDate.getFullYear()}`;\n  };\n\n  const toggleVisibility = async () => {\n    setPickerVisible(!pickerVisible);\n    focused ? _handleBlur() : _handleFocus();\n  };\n  const insets = useSafeAreaInsets();\n\n  // const _restoreLabel = () =>\n  //   Animated.timing(labeled, {\n  //     toValue: 1,\n  //     duration: FOCUS_ANIMATION_DURATION,\n  //     useNativeDriver: true,\n  //   }).start();\n\n  // const _minmizeLabel = () =>\n  //   Animated.timing(labeled, {\n  //     toValue: 0,\n  //     duration: BLUR_ANIMATION_DURATION,\n  //     useNativeDriver: true,\n  //   }).start();\n\n  // const _showPlaceholder = () =>\n  //   setTimeout(() => setPlaceholder1(placeholder || \"\"), 50);\n\n  const _hidePlaceholder = () => {\n    setPlaceholder1(\"\");\n  };\n\n  React.useEffect(() => {\n    setValue(date);\n  }, [date]);\n\n  React.useEffect(() => {\n    if (value || focused || placeholder1) {\n      // _minmizeLabel();\n      Animated.timing(labeled, {\n        toValue: 0,\n        duration: BLUR_ANIMATION_DURATION,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // _restoreLabel();\n      Animated.timing(labeled, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [value, focused, placeholder1, labeled]);\n\n  React.useEffect(() => {\n    const _showPlaceholder = () =>\n      setTimeout(() => setPlaceholder1(placeholder || \"\"), 50);\n    if (focused || !label) {\n      _showPlaceholder();\n    } else {\n      _hidePlaceholder();\n    }\n    return () => {\n      clearTimeout(_showPlaceholder());\n    };\n  }, [focused, label, placeholder]);\n\n  const _handleFocus = () => {\n    if (disabled) {\n      return;\n    }\n\n    setFocused(true);\n  };\n\n  const _handleBlur = () => {\n    if (disabled) {\n      return;\n    }\n    setFocused(false);\n  };\n\n  const MINIMIZED_LABEL_Y_OFFSET = -(typography.caption.lineHeight + 4);\n  const OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -(16 * 0.5 + 4);\n  const MAXIMIZED_LABEL_FONT_SIZE = typography.subtitle1.fontSize;\n  const MINIMIZED_LABEL_FONT_SIZE = typography.caption.fontSize;\n\n  const hasActiveOutline = focused;\n\n  let inputTextColor,\n    activeColor,\n    underlineColor,\n    borderColor,\n    placeholderColor,\n    containerStyle: StyleProp<ViewStyle>,\n    backgroundColor,\n    inputStyle: StyleProp<TextStyle>;\n\n  inputTextColor = colors.strong;\n  if (disabled) {\n    activeColor = colors.light;\n    placeholderColor = colors.light;\n    borderColor = \"transparent\";\n    underlineColor = \"transparent\";\n    backgroundColor = colors.divider;\n  } else {\n    activeColor = colors.primary;\n    placeholderColor = borderColor = colors.light;\n    underlineColor = colors.light;\n    backgroundColor = colors.background;\n  }\n\n  const { lineHeight, ...subtitle1 } = typography.subtitle1;\n\n  inputStyle = {\n    paddingVertical: 0,\n    color: inputTextColor,\n    paddingLeft:\n      leftIconName && leftIconMode === \"inset\"\n        ? ICON_SIZE + (type === \"solid\" ? 16 : 12)\n        : 0,\n    paddingRight: rightIconName ? ICON_SIZE + 16 + 4 : 12,\n    ...subtitle1,\n    height: lineHeight,\n  };\n\n  if (type === \"underline\") {\n    containerStyle = {\n      borderTopLeftRadius: roundness,\n      borderTopRightRadius: roundness,\n      paddingBottom: 12,\n      marginTop: 16,\n    };\n  } else {\n    containerStyle = {\n      borderRadius: roundness,\n      borderColor: hasActiveOutline ? activeColor : borderColor,\n      borderWidth: 1,\n      paddingTop: labeled ? 16 * 1.5 : 16,\n      paddingBottom: labeled ? 16 * 0.5 : 16,\n      opacity: disabled ? disabledOpacity : 1,\n      backgroundColor,\n    };\n\n    inputStyle.paddingHorizontal = 12;\n  }\n\n  if (leftIconName && leftIconMode === \"outset\") {\n    containerStyle.marginLeft = ICON_SIZE + 8;\n  }\n\n  let leftIconColor;\n  if (focused) {\n    leftIconColor = colors.primary;\n  } else {\n    leftIconColor = colors.light;\n  }\n\n  const leftIconProps = {\n    size: 24,\n    color: leftIconColor,\n    name: leftIconName || \"\",\n  };\n\n  const leftIconStyle: ImageStyle = {\n    position: \"absolute\",\n    marginTop:\n      type === \"solid\"\n        ? leftIconMode === \"inset\"\n          ? MINIMIZED_LABEL_FONT_SIZE + 4\n          : 16\n        : leftIconMode === \"outset\"\n        ? 16\n        : 0,\n  };\n\n  const labelStyle = {\n    ...typography.subtitle1,\n    top: type === \"solid\" ? 16 : 0,\n    left:\n      leftIconName && leftIconMode === \"inset\"\n        ? ICON_SIZE + (type === \"solid\" ? 16 : 12)\n        : 0,\n    transform: [\n      {\n        // Move label to top\n        translateY: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [\n            type === \"solid\"\n              ? OUTLINE_MINIMIZED_LABEL_Y_OFFSET\n              : MINIMIZED_LABEL_Y_OFFSET,\n            0,\n          ],\n        }),\n      },\n      {\n        // Make label smaller\n        scale: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [\n            MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE,\n            1,\n          ],\n        }),\n      },\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [\n            -(1 - MINIMIZED_LABEL_FONT_SIZE / MAXIMIZED_LABEL_FONT_SIZE) *\n              (labelLayout.width / 2),\n            0,\n          ],\n        }),\n      },\n    ],\n  };\n\n  const inputStyles = [\n    styles.input,\n    inputStyle,\n    type === \"solid\" ? { marginHorizontal: 12 } : {},\n  ];\n\n  // const render = (props) => <NativeTextInput {...props} />;\n\n  return (\n    <View style={[styles.container, style]}>\n      <Touchable disabled={disabled} onPress={toggleVisibility}>\n        <View pointerEvents=\"none\">\n          <View style={[styles.container, style]}>\n            {leftIconName && leftIconMode === \"outset\" ? (\n              <Icon {...leftIconProps} style={leftIconStyle} />\n            ) : null}\n            <View\n              style={[containerStyle, style ? { height: style.height } : {}]}\n            >\n              {type === \"underline\" ? (\n                // When type === 'flat', render an underline\n                <Animated.View\n                  style={[\n                    styles.underline,\n                    {\n                      backgroundColor: focused ? activeColor : underlineColor,\n                      // Underlines is thinner when input is not focused\n                      transform: [{ scaleY: focused ? 1 : 0.5 }],\n                    },\n                  ]}\n                />\n              ) : null}\n\n              {label ? (\n                // Position colored placeholder and gray placeholder on top of each other and crossfade them\n                // This gives the effect of animating the color, but allows us to use native driver\n                <View\n                  pointerEvents=\"none\"\n                  style={[\n                    StyleSheet.absoluteFill,\n                    {\n                      opacity:\n                        // Hide the label in minimized state until we measure its width\n                        date || focused ? (labelLayout.measured ? 1 : 0) : 1,\n                    },\n                  ]}\n                >\n                  <AnimatedText\n                    onLayout={(e: LayoutChangeEvent) =>\n                      setLabelLayout({\n                        width: e.nativeEvent.layout.width,\n                        measured: true,\n                      })\n                    }\n                    style={[\n                      styles.placeholder,\n                      type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                      labelStyle,\n                      {\n                        color: colors.light,\n                        opacity: labeled.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [hasActiveOutline ? 1 : 0, 0],\n                        }),\n                      },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {label}\n                  </AnimatedText>\n                  <AnimatedText\n                    style={[\n                      styles.placeholder,\n                      type === \"solid\" ? { paddingHorizontal: 12 } : {},\n                      labelStyle,\n                      {\n                        color: placeholderColor,\n                        opacity: hasActiveOutline ? labeled : 1,\n                      },\n                    ]}\n                    numberOfLines={1}\n                  >\n                    {label}\n                  </AnimatedText>\n                </View>\n              ) : null}\n\n              {leftIconName && leftIconMode === \"inset\" ? (\n                <Icon\n                  {...leftIconProps}\n                  style={{\n                    ...leftIconStyle,\n                    marginLeft: type === \"solid\" ? 16 : 0,\n                  }}\n                />\n              ) : null}\n\n              <NativeTextInput\n                value={formatDate()}\n                placeholder={label ? placeholder1 : placeholder}\n                editable={!disabled}\n                placeholderTextColor={placeholderColor}\n                selectionColor={activeColor}\n                onFocus={_handleFocus}\n                onBlur={_handleBlur}\n                underlineColorAndroid={\"transparent\"}\n                style={inputStyles}\n                {...props}\n              />\n            </View>\n            {rightIconName ? (\n              <Icon\n                name={rightIconName}\n                size={ICON_SIZE}\n                color={colors.light}\n                style={{\n                  position: \"absolute\",\n                  right: 16,\n                  marginTop:\n                    type === \"solid\" ? MINIMIZED_LABEL_FONT_SIZE + 4 : 16,\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n      </Touchable>\n      {pickerVisible && (\n        <Portal>\n          <View\n            style={[\n              styles.picker,\n              {\n                backgroundColor: colors.divider,\n              },\n            ]}\n          >\n            <View\n              style={[\n                styles.pickerContainer,\n                {\n                  paddingTop: insets.top,\n                  paddingBottom: insets.bottom,\n                  paddingLeft: insets.left,\n                  paddingRight: insets.right,\n                },\n              ]}\n            >\n              {Platform.OS === \"ios\" && (\n                <Button\n                  Icon={Icon}\n                  type=\"text\"\n                  onPress={toggleVisibility}\n                  style={styles.closeButton}\n                >\n                  Close\n                </Button>\n              )}\n\n              <DateTimePicker\n                value={getValidDate()}\n                mode={mode}\n                isVisible={pickerVisible}\n                toggleVisibility={toggleVisibility}\n                onChange={(_event: any, data: any) => {\n                  Platform.OS === \"ios\" ? null : toggleVisibility();\n                  setValue(data);\n                  onDateChange(data);\n                }}\n              />\n            </View>\n          </View>\n        </Portal>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: \"stretch\",\n  },\n  picker: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  underline: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    textAlignVertical: \"center\",\n    margin: 0,\n    textAlign: I18nManager.isRTL ? \"right\" : \"left\",\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 0,\n  },\n  pickerContainer: { flexDirection: \"column\", width: \"100%\" },\n  closeButton: {\n    alignSelf: \"flex-end\",\n  },\n});\n\nexport default withTheme(DatePicker);\n"]}